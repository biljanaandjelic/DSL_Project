/*
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalFormValidationDslParser;
import org.xtext.example.mydsl.services.FormValidationDslGrammarAccess;

public class FormValidationDslParser extends AbstractContentAssistParser {

	@Inject
	private FormValidationDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalFormValidationDslParser createParser() {
		InternalFormValidationDslParser result = new InternalFormValidationDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getClassRuleAccess().getAlternatives(), "rule__ClassRule__Alternatives");
					put(grammarAccess.getAttributeRuleAccess().getAlternatives(), "rule__AttributeRule__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getFloatAccess().getAlternatives(), "rule__Float__Alternatives");
					put(grammarAccess.getEVrstaAccess().getAlternatives(), "rule__EVrsta__Alternatives");
					put(grammarAccess.getValidationClassAccess().getGroup(), "rule__ValidationClass__Group__0");
					put(grammarAccess.getValidationClassAccess().getGroup_3(), "rule__ValidationClass__Group_3__0");
					put(grammarAccess.getValidationClassAccess().getGroup_4(), "rule__ValidationClass__Group_4__0");
					put(grammarAccess.getClassAttributeAccess().getGroup(), "rule__ClassAttribute__Group__0");
					put(grammarAccess.getClassAttributeAccess().getGroup_4(), "rule__ClassAttribute__Group_4__0");
					put(grammarAccess.getAttributeTypeAccess().getGroup(), "rule__AttributeType__Group__0");
					put(grammarAccess.getRequiredAccess().getGroup(), "rule__Required__Group__0");
					put(grammarAccess.getEmailAccess().getGroup(), "rule__Email__Group__0");
					put(grammarAccess.getMinLengthAccess().getGroup(), "rule__MinLength__Group__0");
					put(grammarAccess.getMaxLengthAccess().getGroup(), "rule__MaxLength__Group__0");
					put(grammarAccess.getLengthAccess().getGroup(), "rule__Length__Group__0");
					put(grammarAccess.getMinNumberAccess().getGroup(), "rule__MinNumber__Group__0");
					put(grammarAccess.getMinDateAccess().getGroup(), "rule__MinDate__Group__0");
					put(grammarAccess.getMaxNumberAccess().getGroup(), "rule__MaxNumber__Group__0");
					put(grammarAccess.getMaxDateAccess().getGroup(), "rule__MaxDate__Group__0");
					put(grammarAccess.getAcceptableValuesStringAccess().getGroup(), "rule__AcceptableValuesString__Group__0");
					put(grammarAccess.getAcceptableValuesStringAccess().getGroup_2(), "rule__AcceptableValuesString__Group_2__0");
					put(grammarAccess.getAcceptableValuesStringAccess().getGroup_2_2(), "rule__AcceptableValuesString__Group_2_2__0");
					put(grammarAccess.getAcceptableValuesDateAccess().getGroup(), "rule__AcceptableValuesDate__Group__0");
					put(grammarAccess.getAcceptableValuesDateAccess().getGroup_2(), "rule__AcceptableValuesDate__Group_2__0");
					put(grammarAccess.getAcceptableValuesDateAccess().getGroup_2_2(), "rule__AcceptableValuesDate__Group_2_2__0");
					put(grammarAccess.getStringPatternAccess().getGroup(), "rule__StringPattern__Group__0");
					put(grammarAccess.getDatePatternAccess().getGroup(), "rule__DatePattern__Group__0");
					put(grammarAccess.getFloatAccess().getGroup_0(), "rule__Float__Group_0__0");
					put(grammarAccess.getNotEqualsAccess().getGroup(), "rule__NotEquals__Group__0");
					put(grammarAccess.getNotEqualsAccess().getGroup_3(), "rule__NotEquals__Group_3__0");
					put(grammarAccess.getGreaterThanAccess().getGroup(), "rule__GreaterThan__Group__0");
					put(grammarAccess.getGreaterThanAccess().getGroup_3(), "rule__GreaterThan__Group_3__0");
					put(grammarAccess.getGreaterThanAccess().getGroup_4(), "rule__GreaterThan__Group_4__0");
					put(grammarAccess.getGreaterThanAccess().getGroup_4_2(), "rule__GreaterThan__Group_4_2__0");
					put(grammarAccess.getEqualsAccess().getGroup(), "rule__Equals__Group__0");
					put(grammarAccess.getEqualsAccess().getGroup_3(), "rule__Equals__Group_3__0");
					put(grammarAccess.getLessThanAccess().getGroup(), "rule__LessThan__Group__0");
					put(grammarAccess.getLessThanAccess().getGroup_3(), "rule__LessThan__Group_3__0");
					put(grammarAccess.getLessThanAccess().getGroup_4(), "rule__LessThan__Group_4__0");
					put(grammarAccess.getLessThanAccess().getGroup_4_3(), "rule__LessThan__Group_4_3__0");
					put(grammarAccess.getAttributeArrayAccess().getGroup(), "rule__AttributeArray__Group__0");
					put(grammarAccess.getAttributeArrayAccess().getGroup_1(), "rule__AttributeArray__Group_1__0");
					put(grammarAccess.getAttributeArrayAccess().getGroup_1_2(), "rule__AttributeArray__Group_1_2__0");
					put(grammarAccess.getValidationClassAccess().getNameAssignment_1(), "rule__ValidationClass__NameAssignment_1");
					put(grammarAccess.getValidationClassAccess().getClassattributeAssignment_3_0(), "rule__ValidationClass__ClassattributeAssignment_3_0");
					put(grammarAccess.getValidationClassAccess().getClassattributeAssignment_3_1(), "rule__ValidationClass__ClassattributeAssignment_3_1");
					put(grammarAccess.getValidationClassAccess().getClassruleAssignment_4_0(), "rule__ValidationClass__ClassruleAssignment_4_0");
					put(grammarAccess.getValidationClassAccess().getClassruleAssignment_4_1(), "rule__ValidationClass__ClassruleAssignment_4_1");
					put(grammarAccess.getClassAttributeAccess().getNameAssignment_0(), "rule__ClassAttribute__NameAssignment_0");
					put(grammarAccess.getClassAttributeAccess().getAttributetypeAssignment_3(), "rule__ClassAttribute__AttributetypeAssignment_3");
					put(grammarAccess.getClassAttributeAccess().getAttributeruleAssignment_4_0(), "rule__ClassAttribute__AttributeruleAssignment_4_0");
					put(grammarAccess.getClassAttributeAccess().getAttributeruleAssignment_4_1(), "rule__ClassAttribute__AttributeruleAssignment_4_1");
					put(grammarAccess.getAttributeTypeAccess().getVrstaAssignment_1(), "rule__AttributeType__VrstaAssignment_1");
					put(grammarAccess.getRequiredAccess().getIsRequiredAssignment_1(), "rule__Required__IsRequiredAssignment_1");
					put(grammarAccess.getEmailAccess().getIsEmailAssignment_1(), "rule__Email__IsEmailAssignment_1");
					put(grammarAccess.getMinLengthAccess().getValueAssignment_2(), "rule__MinLength__ValueAssignment_2");
					put(grammarAccess.getMaxLengthAccess().getValueAssignment_2(), "rule__MaxLength__ValueAssignment_2");
					put(grammarAccess.getLengthAccess().getValueAssignment_2(), "rule__Length__ValueAssignment_2");
					put(grammarAccess.getMinNumberAccess().getValueAssignment_2(), "rule__MinNumber__ValueAssignment_2");
					put(grammarAccess.getMinDateAccess().getValueAssignment_2(), "rule__MinDate__ValueAssignment_2");
					put(grammarAccess.getMaxNumberAccess().getValueAssignment_2(), "rule__MaxNumber__ValueAssignment_2");
					put(grammarAccess.getMaxDateAccess().getValueAssignment_2(), "rule__MaxDate__ValueAssignment_2");
					put(grammarAccess.getAcceptableValuesStringAccess().getValuesAssignment_2_1(), "rule__AcceptableValuesString__ValuesAssignment_2_1");
					put(grammarAccess.getAcceptableValuesStringAccess().getValuesAssignment_2_2_1(), "rule__AcceptableValuesString__ValuesAssignment_2_2_1");
					put(grammarAccess.getAcceptableValuesDateAccess().getValuesAssignment_2_1(), "rule__AcceptableValuesDate__ValuesAssignment_2_1");
					put(grammarAccess.getAcceptableValuesDateAccess().getValuesAssignment_2_2_1(), "rule__AcceptableValuesDate__ValuesAssignment_2_2_1");
					put(grammarAccess.getStringPatternAccess().getValueAssignment_2(), "rule__StringPattern__ValueAssignment_2");
					put(grammarAccess.getDatePatternAccess().getValueAssignment_2(), "rule__DatePattern__ValueAssignment_2");
					put(grammarAccess.getNotEqualsAccess().getAttributearrayAssignment_3_1(), "rule__NotEquals__AttributearrayAssignment_3_1");
					put(grammarAccess.getGreaterThanAccess().getClassattributeAssignment_3_1(), "rule__GreaterThan__ClassattributeAssignment_3_1");
					put(grammarAccess.getGreaterThanAccess().getAttributearrayAssignment_4_1(), "rule__GreaterThan__AttributearrayAssignment_4_1");
					put(grammarAccess.getGreaterThanAccess().getAttributearrayAssignment_4_2_1(), "rule__GreaterThan__AttributearrayAssignment_4_2_1");
					put(grammarAccess.getEqualsAccess().getAttributearrayAssignment_3_1(), "rule__Equals__AttributearrayAssignment_3_1");
					put(grammarAccess.getLessThanAccess().getClassattributeAssignment_3_1(), "rule__LessThan__ClassattributeAssignment_3_1");
					put(grammarAccess.getLessThanAccess().getAttributearrayAssignment_4_2(), "rule__LessThan__AttributearrayAssignment_4_2");
					put(grammarAccess.getLessThanAccess().getAttributearrayAssignment_4_3_1(), "rule__LessThan__AttributearrayAssignment_4_3_1");
					put(grammarAccess.getAttributeArrayAccess().getClassattributeAssignment_1_1(), "rule__AttributeArray__ClassattributeAssignment_1_1");
					put(grammarAccess.getAttributeArrayAccess().getClassattributeAssignment_1_2_1(), "rule__AttributeArray__ClassattributeAssignment_1_2_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalFormValidationDslParser typedParser = (InternalFormValidationDslParser) parser;
			typedParser.entryRuleValidationClass();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public FormValidationDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(FormValidationDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
