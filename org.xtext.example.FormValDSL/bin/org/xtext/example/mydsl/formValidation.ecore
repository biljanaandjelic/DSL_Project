<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="formValidation" nsURI="http://www.example.org/formValidation"
    nsPrefix="formValidation">
  <eAnnotations source="http://www.eclipse.org/OCL/Import">
    <details key="ecore" value="http://www.eclipse.org/emf/2002/Ecore"/>
    <details key="ecore.xml.type" value="http://www.eclipse.org/emf/2003/XMLType"/>
  </eAnnotations>
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="ValidationClass">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="differentClassAttributes nameFormat"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="differentClassAttributes" value="Tuple {&#xA;&#x9;message : String = 'All attributes should be different',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; classattribute-> forAll(a1: ClassAttribute, a2: ClassAttribute | &#xA;&#x9;&#x9; &#x9;if a1&lt;>a2 then a1.name &lt;> a2.name else true endif&#xA;&#x9;&#x9; )&#xA;}.status"/>
      <details key="nameFormat" value="name.matches('[a-z][a-zA-Z0-9.]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classattribute" upperBound="-1"
        eType="#//ClassAttribute" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classrule" upperBound="-1"
        eType="#//ClassRule" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="label" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="formlayout" upperBound="-1"
        eType="#//FormLayout" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="additionalSettings" upperBound="-1"
        eType="#//AdditionalSettings" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="overviewsettings" eType="#//OverviewSettings"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeRule" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributeRuleErrorMessage"
        eType="#//ErrorMessage" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ClassAttribute">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="appropriateAttributeRules compareMinMaxLength compareMinMaxNumber compareMinMaxDate nameFormat attributeRuleRequiredCanAppearJustOnce attributeRuleMinLengthCanAppearJustOnce attributeRuleMaxLengthCanAppearJustOnce attributeRuleLengthCanAppearJustOnce attributeRuleMinCanAppearJustOnce attributeRuleMaxCanAppearJustOnce attributeRuleAcceptableValuesCanAppearJustOnce attributeRulePatternCanAppearJustOnce"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="appropriateAttributeRules" value="Tuple {&#xA;&#x9;message : String = 'Each data type has appropriate rulles that can be applay to it.',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; if attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9; &#x9;  then if attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = EDataType::Number&#xA;&#x9;&#x9; &#x9;  &#x9;    then attributerule-> forAll(a1: AttributeRule | a1.oclIsKindOf(MaxNumber) or a1.oclIsKindOf(MinNumber) or a1.oclIsKindOf(Required))&#xA;&#x9;&#x9; &#x9;        else if attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = EDataType::_'String'  &#xA;&#x9;&#x9; &#x9;             then attributerule-> forAll(a1: AttributeRule | a1.oclIsKindOf(MinLength) or a1.oclIsKindOf(MaxLength) or&#xA;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;a1.oclIsKindOf(Length) or a1.oclIsKindOf(Required) or a1.oclIsKindOf(Pattern) or a1.oclIsKindOf(AcceptableValuesString))&#xA;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;  else attributerule-> forAll(a1: AttributeRule | a1.oclIsKindOf(MaxDate) or a1.oclIsKindOf(MinDate) or a1.oclIsKindOf(Required)&#xA;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;  or a1.oclIsKindOf(AcceptableValuesDate)or a1.oclIsKindOf(DatePattern))&#xA;&#x9;&#x9;                 endif&#xA;&#x9;&#x9;           endif&#xA;&#x9;&#x9;else attributerule-> forAll(a1: AttributeRule | a1.oclIsKindOf(Required))&#xA;&#x9;&#x9;endif&#xA;}.status"/>
      <details key="compareMinMaxLength" value="Tuple {&#xA;&#x9;message : String = 'Maxlength value should be greater than mainlength',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9;attributerule-> forAll(a1: AttributeRule, a2: AttributeRule | &#xA;&#x9;&#x9;&#x9;if a1.oclIsKindOf(MaxLength) and a2.oclIsKindOf(MinLength)&#xA;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;a1.oclAsType(MaxLength).value >= a2.oclAsType(MinLength).value&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;)&#xA;}.status"/>
      <details key="compareMinMaxNumber" value="Tuple {&#xA;&#x9;message : String = 'Check if max value is greater then min value',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9;attributerule-> forAll(a1: AttributeRule, a2: AttributeRule | &#xA;&#x9;&#x9;&#x9;if a1.oclIsKindOf(MaxNumber) and a2.oclIsKindOf(MinNumber)&#xA;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;a1.oclAsType(MaxNumber).value >= a2.oclAsType(MinNumber).value&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;)&#xA;}.status"/>
      <details key="compareMinMaxDate" value="Tuple {&#xA;&#x9;message : String = 'Check id max date is greater then min date',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9;attributerule-> forAll(a1: AttributeRule, a2: AttributeRule | &#xA;&#x9;&#x9;&#x9;if a1.oclIsKindOf(MaxDate) and a2.oclIsKindOf(MinDate)&#xA;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;a1.oclAsType(MaxDate).value >= a2.oclAsType(MinDate).value&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;)&#xA;}.status"/>
      <details key="nameFormat" value="name.matches('[a-z][a-zA-Z]*')"/>
      <details key="attributeRuleRequiredCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(Required))->size() &lt;=1"/>
      <details key="attributeRuleMinLengthCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(MinLength))->size() &lt;=1"/>
      <details key="attributeRuleMaxLengthCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(MaxLength))->size() &lt;=1"/>
      <details key="attributeRuleLengthCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(Length))->size() &lt;=1"/>
      <details key="attributeRuleMinCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(Min))->size() &lt;=1"/>
      <details key="attributeRuleMaxCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(Max))->size() &lt;=1"/>
      <details key="attributeRuleAcceptableValuesCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(AcceptableValues))->size() &lt;=1"/>
      <details key="attributeRulePatternCanAppearJustOnce" value="&#xA;&#x9;&#x9;attributerule -> select(aR| aR.oclIsKindOf(Pattern))->size() &lt;=1"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributetype" lowerBound="1"
        eType="#//AttributeType" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributerule" upperBound="-1"
        eType="#//AttributeRule" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="label" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="master" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isClassRepresenting" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="uiComponent" eType="#//UIComponent"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributeDataType" lowerBound="1"
        eType="#//AttributeDataType" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EDataType">
    <eLiterals name="String"/>
    <eLiterals name="Number" value="1"/>
    <eLiterals name="Date" value="2"/>
    <eLiterals name="Blob" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Min" abstract="true" eSuperTypes="#//AttributeRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="Max" abstract="true" eSuperTypes="#//AttributeRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="Required" eSuperTypes="#//AttributeRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="AcceptableValues" abstract="true" eSuperTypes="#//AttributeRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="Pattern" abstract="true" eSuperTypes="#//AttributeRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="MinLength" eSuperTypes="#//AttributeRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="minLengthValue"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="minLengthValue" value="Tuple {&#xA;&#x9;message : String = 'MaxLength cannot be less than zero',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9;value > 0&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Int"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MaxLength" eSuperTypes="#//AttributeRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="maxLengthValue"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="maxLengthValue" value="Tuple {&#xA;&#x9;message : String = 'MaxLength cannot be less than zero',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9;value > 0&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Length" eSuperTypes="#//AttributeRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="lengthValue"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="lengthValue" value="Tuple {&#xA;&#x9;message : String = 'MaxLength cannot be less than zero',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9;value > 0&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Int"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MinNumber" eSuperTypes="#//Min">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MinDate" eSuperTypes="#//Min">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MaxNumber" eSuperTypes="#//Max">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MaxDate" eSuperTypes="#//Max">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AcceptableValuesString" eSuperTypes="#//AcceptableValues">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="values" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AcceptableValuesDate" eSuperTypes="#//AcceptableValues">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="values" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StringPattern" eSuperTypes="#//Pattern">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DatePattern" eSuperTypes="#//Pattern">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="structureOfRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="structureOfRegex" value="&#xA;&#x9;&#x9;value.matches('dd.MM.yyyy') or value.matches('dd.MMM.yyyy') or value.matches('dd-MMM-yyyy')&#xA;&#x9;&#x9;or value.matches('dd/MMM/yyyy') or value.matches('dd-MM-yyyy') or value.matches('dd/MM/yyyy')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral="dd/MM/yyyy"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ClassRule" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="classRuleErrorMessage"
        eType="#//ErrorMessage" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NotEquals" eSuperTypes="#//ClassRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="areEqualTypes differentDataInArray"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="areEqualTypes" value="Tuple {&#xA;&#x9;message : String = 'In notequal rule all data types should be same.',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; attributearray.attributes -> forAll(a1: ClassAttribute, a2: ClassAttribute |&#xA;&#x9;&#x9; if a1&lt;>a2  then &#xA;&#x9;&#x9;&#x9; if a1.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; and a2.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; then&#xA;&#x9;&#x9;&#x9; a1.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = a2.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type&#xA;&#x9;&#x9;&#x9; else &#xA;&#x9;&#x9;&#x9; a1.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name = a2.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name&#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9; else true&#xA;&#x9;&#x9; endif&#xA;&#x9;&#x9;  )&#xA;}.status"/>
      <details key="differentDataInArray" value="Tuple {&#xA;&#x9;message : String = 'All attributes should be different',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; attributearray.attributes -> forAll(a1: ClassAttribute, a2: ClassAttribute |&#xA;&#x9;&#x9; &#x9;if a1&lt;>a2 then&#xA;&#x9;&#x9; &#x9;a1.name &lt;> a2.name&#xA;&#x9;&#x9; &#x9;else true&#xA;&#x9;&#x9; &#x9;endif&#xA;&#x9;&#x9; )&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributearray" eType="#//AttributeArray"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterThan" eSuperTypes="#//ClassRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="differentAttributes differentAttributesInArray areEqualTypes"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="differentAttributes" value="Tuple {&#xA;&#x9;message : String = 'First attribute and attributes from array should be different',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9;attributearray.attributes -> forAll(a1: ClassAttribute | classattribute.name &lt;> a1.name)&#xA;}.status"/>
      <details key="differentAttributesInArray" value="Tuple {&#xA;&#x9;message : String = 'Attributes in array must be different',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;&#x9; attributearray.attributes -> forAll(a1: ClassAttribute, a2: ClassAttribute | if a1&lt;>a2 then&#xA;&#x9;&#x9;&#x9; &#x9;a1.name &lt;> a2.name&#xA;&#x9;&#x9;&#x9; &#x9;else true&#xA;&#x9;&#x9;&#x9; &#x9;endif&#xA;&#x9;&#x9;&#x9; )&#xA;}.status"/>
      <details key="areEqualTypes" value="Tuple {&#xA;&#x9;message : String = 'In greater then rule all data types should be same.',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; attributearray.attributes -> forAll(a1: ClassAttribute, a2: ClassAttribute |&#xA;&#x9;&#x9; if a1&lt;>a2  then &#xA;&#x9;&#x9;&#x9; if a1.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; and a2.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; and classattribute.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType)&#xA;&#x9;&#x9;&#x9; then&#xA;&#x9;&#x9;&#x9; a1.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = a2.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type&#xA;&#x9;&#x9;&#x9; and classattribute.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = a1.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type&#xA;&#x9;&#x9;&#x9; else &#xA;&#x9;&#x9;&#x9; a1.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name = a2.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name&#xA;&#x9;&#x9;&#x9; and classattribute.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name = a1.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name&#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9; else true&#xA;&#x9;&#x9; endif)&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classattribute" eType="#//ClassAttribute"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributearray" upperBound="-1"
        eType="#//AttributeArray" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Equals" eSuperTypes="#//ClassRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="collectionSize areEqualTypes"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="collectionSize" value="&#xA;&#x9;&#x9;&#x9;attributearray.attributes -> size() >= 2"/>
      <details key="areEqualTypes" value="Tuple {&#xA;&#x9;message : String = 'In equal rule all data types should be same.',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; attributearray.attributes -> forAll(a1: ClassAttribute, a2: ClassAttribute |&#xA;&#x9;&#x9; if a1&lt;>a2  then &#xA;&#x9;&#x9;&#x9; if a1.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; and a2.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; then&#xA;&#x9;&#x9;&#x9; a1.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = a2.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type&#xA;&#x9;&#x9;&#x9; else &#xA;&#x9;&#x9;&#x9;  if (a1.attributetype.attributeDataType.oclIsKindOf(NonPrimitiveDataType) and a2.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType))&#xA;&#x9;&#x9;&#x9;  or (a1.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) and a2.attributetype.attributeDataType.oclIsKindOf(NonPrimitiveDataType))&#xA;&#x9;&#x9;&#x9;  then false&#xA;&#x9;&#x9;&#x9;  else&#xA;&#x9;&#x9;&#x9;  a1.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name = a2.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name&#xA;&#x9;&#x9;&#x9;  endif&#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9; else true&#xA;&#x9;&#x9; endif&#xA;&#x9;&#x9;  )&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributearray" eType="#//AttributeArray"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LessThan" eSuperTypes="#//ClassRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="areEqualTypes differentAttributes"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="areEqualTypes" value="Tuple {&#xA;&#x9;message : String = 'In less then rule all data types should be same.',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; attributearray.attributes -> forAll(a1: ClassAttribute, a2: ClassAttribute |&#xA;&#x9;&#x9; if a1&lt;>a2  then &#xA;&#x9;&#x9;&#x9; if a1.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; and a2.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType) &#xA;&#x9;&#x9;&#x9; and classattribute.attributetype.attributeDataType.oclIsKindOf(PrimitiveDataType)&#xA;&#x9;&#x9;&#x9; then&#xA;&#x9;&#x9;&#x9; a1.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = a2.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type&#xA;&#x9;&#x9;&#x9; and classattribute.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type = a1.attributetype.attributeDataType.oclAsType(PrimitiveDataType).type&#xA;&#x9;&#x9;&#x9; else &#xA;&#x9;&#x9;&#x9; a1.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name = a2.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name&#xA;&#x9;&#x9;&#x9; and classattribute.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name = a1.attributetype.attributeDataType.oclAsType(NonPrimitiveDataType).type.name&#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9; else true&#xA;&#x9;&#x9; endif)&#xA;}.status"/>
      <details key="differentAttributes" value="&#xA;&#x9;&#x9;&#x9;attributearray.attributes -> forAll(a1: ClassAttribute | classattribute.name &lt;> a1.name)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classattribute" eType="#//ClassAttribute"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributearray" upperBound="-1"
        eType="#//AttributeArray" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeArray">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="containDifferentAttributes"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="containDifferentAttributes" value="&#xA;&#x9;&#x9;attributes -> forAll(a1: ClassAttribute, a2: ClassAttribute | &#xA;&#x9;&#x9;&#x9;if a1 &lt;> a2 &#xA;&#x9;&#x9;&#x9;then a1.name &lt;> a2.name&#xA;&#x9;&#x9;&#x9;else true &#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" upperBound="-1"
        eType="#//ClassAttribute"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UIComponent" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="tooltip" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="note" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NumericUIComponent" eSuperTypes="#//UIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="componentType" eType="#//EUINumberComponentType"
        defaultValueLiteral="SimpleInput"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerationUIComponent" abstract="true"
      eSuperTypes="#//UIComponent"/>
  <eClassifiers xsi:type="ecore:EClass" name="RadioButton" eSuperTypes="#//SelectingUIComponent">
    <eAnnotations source="http://www.obeo.fr/dsl/dnc/archetype">
      <details key="archetype" value="Role"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="orientation" eType="#//EOrientation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EOrientation">
    <eLiterals name="Vertical"/>
    <eLiterals name="Horizontal" value="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DropDownList" eSuperTypes="#//SelectingUIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isMultiSelect" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CheckBox" eSuperTypes="#//SelectingUIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="orientation" eType="#//EOrientation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DateUIComponent" eSuperTypes="#//UIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//EDateUIType"
        defaultValueLiteral="OnlyDate"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextUIComponent" abstract="true" eSuperTypes="#//UIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="placeHolder" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextInput" eSuperTypes="#//TextUIComponent"/>
  <eClassifiers xsi:type="ecore:EClass" name="TextArea" eSuperTypes="#//TextUIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numOfRows" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FormLayout" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="checkFormLayout uniqueFormLayoutName nameFormat"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="checkFormLayout" value="Tuple {&#xA;&#x9;message : String = 'Attribute could appear only in one layout',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;FormLayout.allInstances()->forAll(fL1: FormLayout, fL2: FormLayout |  &#xA;&#x9;&#x9;&#x9;if fL1 &lt;> fL2 and fL1.attributearray &lt;> null and fL2.attributearray &lt;> null&#xA;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;fL1.attributearray.attributes.oclAsSet() -> intersection(fL2.attributearray.attributes.oclAsSet())->isEmpty()&#xA;&#x9;&#x9;&#x9;else true&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;)&#xA;}.status"/>
      <details key="uniqueFormLayoutName" value="Tuple {&#xA;&#x9;message : String = 'Layout name should be unique',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;FormLayout.allInstances()->forAll(fL1: FormLayout, fL2: FormLayout |  if fL1 &lt;> fL2 then&#xA;&#x9;&#x9;&#x9;fL1.name &lt;> fL2.name&#xA;&#x9;&#x9;&#x9;else true&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;)&#xA;}.status"/>
      <details key="nameFormat" value="name.matches('[a-z][a-zA-Z0-9.]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributearray" eType="#//AttributeArray"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="layouts" upperBound="-1"
        eType="#//FormLayout" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FieldSet" eSuperTypes="#//FormLayout">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="legend" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Tab" eSuperTypes="#//FormLayout">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="label" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Grid" eSuperTypes="#//FormLayout">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numOfColumns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numOfRows" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="order" eType="#//EGridOrder"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="expandLast" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeSettings" eSuperTypes="#//AdditionalSettings">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="presentation" eType="#//ERequiredField"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ERequiredField">
    <eLiterals name="Asterix"/>
    <eLiterals name="Highlighting" value="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LabelSettings" eSuperTypes="#//AdditionalSettings">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="position" eType="#//EPosition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EPosition">
    <eLiterals name="Above"/>
    <eLiterals name="Left" value="1"/>
    <eLiterals name="Right" value="2"/>
    <eLiterals name="Below" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ErrorMessage">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TelInput" eSuperTypes="#//TextUIComponent"/>
  <eClassifiers xsi:type="ecore:EClass" name="EmailInput" eSuperTypes="#//TextUIComponent"/>
  <eClassifiers xsi:type="ecore:EClass" name="Password" eSuperTypes="#//TextUIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visible" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AdditionalSettings" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="FileInput" eSuperTypes="#//UIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="buttonPosition" eType="#//EPosition"
        defaultValueLiteral="Right"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeDataType" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCollection" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PrimitiveDataType" eSuperTypes="#//AttributeDataType">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//EDataType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NonPrimitiveDataType" eSuperTypes="#//AttributeDataType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//ValidationClass"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RefEntity" eSuperTypes="#//UIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSingeValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BusinessModel">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="uniqueClassName"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="uniqueClassName" value="Tuple {&#xA;&#x9;message : String = '',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;validationclasses -> forAll(vC1: ValidationClass, vC2: ValidationClass | if vC1 &lt;> vC2 then&#xA;&#x9;&#x9;&#x9; vC1.name &lt;> vC2.name else true endif)&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="validationclasses" upperBound="-1"
        eType="#//ValidationClass" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EGridOrder">
    <eLiterals name="FirstRow"/>
    <eLiterals name="FirstColumn" value="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ErrorMessageSettings" eSuperTypes="#//AdditionalSettings">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="position" eType="#//EPosition"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="color" eType="#//Color"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FormSettings" eSuperTypes="#//AdditionalSettings">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="autoComplete" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EUINumberComponentType">
    <eLiterals name="NumberScroller"/>
    <eLiterals name="SimpleInput" value="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EDateUIType">
    <eLiterals name="OnlyDate" value="1"/>
    <eLiterals name="OnlyTime" value="2"/>
    <eLiterals name="DateTime" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Pagination">
    <eAnnotations source="http://www.obeo.fr/dsl/dnc/archetype">
      <details key="archetype" value="Description"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="possibleNumberOfShownRows"
        upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultNumOfShownRows"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TableOverview">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="height" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="paging" eType="#//Pagination"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="width" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OverviewSettings">
    <eStructuralFeatures xsi:type="ecore:EReference" name="tableoverview" eType="#//TableOverview"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NoteSettings" eSuperTypes="#//AdditionalSettings">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="position" eType="#//EPosition"
        defaultValueLiteral="Right"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SelectingUIComponent" abstract="true"
      eSuperTypes="#//UIComponent"/>
  <eClassifiers xsi:type="ecore:EClass" name="LoadValues" eSuperTypes="#//SelectingUIComponent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isMultiSelect" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AutocompleteComponent" eSuperTypes="#//UIComponent"/>
  <eClassifiers xsi:type="ecore:EClass" name="Color">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="RedComponentRange GreenComponetRange BlueComponetRange"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="RedComponentRange" value="Tuple {&#xA;&#x9;message : String = 'Red componet is out of range[0,255].',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9; (red &lt;= 255 and red >= 0)&#xA;}.status"/>
      <details key="GreenComponetRange" value="Tuple {&#xA;&#x9;message : String = 'Green componet is out of range[0,255].',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;(green &lt;= 255 and green >=0)&#xA;}.status"/>
      <details key="BlueComponetRange" value="Tuple {&#xA;&#x9;message : String = 'Blue componet is out of range[0,255].',&#xA;&#x9;status : Boolean = &#xA;&#x9;&#x9;(blue &lt;= 255 and blue >=0)&#xA;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="red" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="250"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="green" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="0"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="blue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="0"/>
  </eClassifiers>
</ecore:EPackage>
