/*
 * generated by Xtext 2.9.1
 */
grammar InternalFormValidation;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.FormValidationGrammarAccess;

}
@parser::members {
	private FormValidationGrammarAccess grammarAccess;

	public void setGrammarAccess(FormValidationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleValidationClass
entryRuleValidationClass
:
{ before(grammarAccess.getValidationClassRule()); }
	 ruleValidationClass
{ after(grammarAccess.getValidationClassRule()); } 
	 EOF 
;

// Rule ValidationClass
ruleValidationClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidationClassAccess().getGroup()); }
		(rule__ValidationClass__Group__0)
		{ after(grammarAccess.getValidationClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassRule
entryRuleClassRule
:
{ before(grammarAccess.getClassRuleRule()); }
	 ruleClassRule
{ after(grammarAccess.getClassRuleRule()); } 
	 EOF 
;

// Rule ClassRule
ruleClassRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassRuleAccess().getAlternatives()); }
		(rule__ClassRule__Alternatives)
		{ after(grammarAccess.getClassRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeRule
entryRuleAttributeRule
:
{ before(grammarAccess.getAttributeRuleRule()); }
	 ruleAttributeRule
{ after(grammarAccess.getAttributeRuleRule()); } 
	 EOF 
;

// Rule AttributeRule
ruleAttributeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeRuleAccess().getAlternatives()); }
		(rule__AttributeRule__Alternatives)
		{ after(grammarAccess.getAttributeRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassAttribute
entryRuleClassAttribute
:
{ before(grammarAccess.getClassAttributeRule()); }
	 ruleClassAttribute
{ after(grammarAccess.getClassAttributeRule()); } 
	 EOF 
;

// Rule ClassAttribute
ruleClassAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAttributeAccess().getGroup()); }
		(rule__ClassAttribute__Group__0)
		{ after(grammarAccess.getClassAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeType
entryRuleAttributeType
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup()); }
		(rule__AttributeType__Group__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequired
entryRuleRequired
:
{ before(grammarAccess.getRequiredRule()); }
	 ruleRequired
{ after(grammarAccess.getRequiredRule()); } 
	 EOF 
;

// Rule Required
ruleRequired 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequiredAccess().getGroup()); }
		(rule__Required__Group__0)
		{ after(grammarAccess.getRequiredAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmail
entryRuleEmail
:
{ before(grammarAccess.getEmailRule()); }
	 ruleEmail
{ after(grammarAccess.getEmailRule()); } 
	 EOF 
;

// Rule Email
ruleEmail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmailAccess().getGroup()); }
		(rule__Email__Group__0)
		{ after(grammarAccess.getEmailAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinLength
entryRuleMinLength
:
{ before(grammarAccess.getMinLengthRule()); }
	 ruleMinLength
{ after(grammarAccess.getMinLengthRule()); } 
	 EOF 
;

// Rule MinLength
ruleMinLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinLengthAccess().getGroup()); }
		(rule__MinLength__Group__0)
		{ after(grammarAccess.getMinLengthAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxLength
entryRuleMaxLength
:
{ before(grammarAccess.getMaxLengthRule()); }
	 ruleMaxLength
{ after(grammarAccess.getMaxLengthRule()); } 
	 EOF 
;

// Rule MaxLength
ruleMaxLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxLengthAccess().getGroup()); }
		(rule__MaxLength__Group__0)
		{ after(grammarAccess.getMaxLengthAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLength
entryRuleLength
:
{ before(grammarAccess.getLengthRule()); }
	 ruleLength
{ after(grammarAccess.getLengthRule()); } 
	 EOF 
;

// Rule Length
ruleLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLengthAccess().getGroup()); }
		(rule__Length__Group__0)
		{ after(grammarAccess.getLengthAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinNumber
entryRuleMinNumber
:
{ before(grammarAccess.getMinNumberRule()); }
	 ruleMinNumber
{ after(grammarAccess.getMinNumberRule()); } 
	 EOF 
;

// Rule MinNumber
ruleMinNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinNumberAccess().getGroup()); }
		(rule__MinNumber__Group__0)
		{ after(grammarAccess.getMinNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinDate
entryRuleMinDate
:
{ before(grammarAccess.getMinDateRule()); }
	 ruleMinDate
{ after(grammarAccess.getMinDateRule()); } 
	 EOF 
;

// Rule MinDate
ruleMinDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinDateAccess().getGroup()); }
		(rule__MinDate__Group__0)
		{ after(grammarAccess.getMinDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxNumber
entryRuleMaxNumber
:
{ before(grammarAccess.getMaxNumberRule()); }
	 ruleMaxNumber
{ after(grammarAccess.getMaxNumberRule()); } 
	 EOF 
;

// Rule MaxNumber
ruleMaxNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxNumberAccess().getGroup()); }
		(rule__MaxNumber__Group__0)
		{ after(grammarAccess.getMaxNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxDate
entryRuleMaxDate
:
{ before(grammarAccess.getMaxDateRule()); }
	 ruleMaxDate
{ after(grammarAccess.getMaxDateRule()); } 
	 EOF 
;

// Rule MaxDate
ruleMaxDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxDateAccess().getGroup()); }
		(rule__MaxDate__Group__0)
		{ after(grammarAccess.getMaxDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAcceptableValuesString
entryRuleAcceptableValuesString
:
{ before(grammarAccess.getAcceptableValuesStringRule()); }
	 ruleAcceptableValuesString
{ after(grammarAccess.getAcceptableValuesStringRule()); } 
	 EOF 
;

// Rule AcceptableValuesString
ruleAcceptableValuesString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAcceptableValuesStringAccess().getGroup()); }
		(rule__AcceptableValuesString__Group__0)
		{ after(grammarAccess.getAcceptableValuesStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAcceptableValuesDate
entryRuleAcceptableValuesDate
:
{ before(grammarAccess.getAcceptableValuesDateRule()); }
	 ruleAcceptableValuesDate
{ after(grammarAccess.getAcceptableValuesDateRule()); } 
	 EOF 
;

// Rule AcceptableValuesDate
ruleAcceptableValuesDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAcceptableValuesDateAccess().getGroup()); }
		(rule__AcceptableValuesDate__Group__0)
		{ after(grammarAccess.getAcceptableValuesDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringPattern
entryRuleStringPattern
:
{ before(grammarAccess.getStringPatternRule()); }
	 ruleStringPattern
{ after(grammarAccess.getStringPatternRule()); } 
	 EOF 
;

// Rule StringPattern
ruleStringPattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringPatternAccess().getGroup()); }
		(rule__StringPattern__Group__0)
		{ after(grammarAccess.getStringPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDatePattern
entryRuleDatePattern
:
{ before(grammarAccess.getDatePatternRule()); }
	 ruleDatePattern
{ after(grammarAccess.getDatePatternRule()); } 
	 EOF 
;

// Rule DatePattern
ruleDatePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatePatternAccess().getGroup()); }
		(rule__DatePattern__Group__0)
		{ after(grammarAccess.getDatePatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInt0
entryRuleInt0
:
{ before(grammarAccess.getInt0Rule()); }
	 ruleInt0
{ after(grammarAccess.getInt0Rule()); } 
	 EOF 
;

// Rule Int0
ruleInt0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt0Access().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getInt0Access().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat
entryRuleFloat
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;

// Rule Float
ruleFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatAccess().getAlternatives()); }
		(rule__Float__Alternatives)
		{ after(grammarAccess.getFloatAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotEquals
entryRuleNotEquals
:
{ before(grammarAccess.getNotEqualsRule()); }
	 ruleNotEquals
{ after(grammarAccess.getNotEqualsRule()); } 
	 EOF 
;

// Rule NotEquals
ruleNotEquals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotEqualsAccess().getGroup()); }
		(rule__NotEquals__Group__0)
		{ after(grammarAccess.getNotEqualsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreaterThan
entryRuleGreaterThan
:
{ before(grammarAccess.getGreaterThanRule()); }
	 ruleGreaterThan
{ after(grammarAccess.getGreaterThanRule()); } 
	 EOF 
;

// Rule GreaterThan
ruleGreaterThan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreaterThanAccess().getGroup()); }
		(rule__GreaterThan__Group__0)
		{ after(grammarAccess.getGreaterThanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquals
entryRuleEquals
:
{ before(grammarAccess.getEqualsRule()); }
	 ruleEquals
{ after(grammarAccess.getEqualsRule()); } 
	 EOF 
;

// Rule Equals
ruleEquals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualsAccess().getGroup()); }
		(rule__Equals__Group__0)
		{ after(grammarAccess.getEqualsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLessThan
entryRuleLessThan
:
{ before(grammarAccess.getLessThanRule()); }
	 ruleLessThan
{ after(grammarAccess.getLessThanRule()); } 
	 EOF 
;

// Rule LessThan
ruleLessThan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLessThanAccess().getGroup()); }
		(rule__LessThan__Group__0)
		{ after(grammarAccess.getLessThanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeArray
entryRuleAttributeArray
:
{ before(grammarAccess.getAttributeArrayRule()); }
	 ruleAttributeArray
{ after(grammarAccess.getAttributeArrayRule()); } 
	 EOF 
;

// Rule AttributeArray
ruleAttributeArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeArrayAccess().getGroup()); }
		(rule__AttributeArray__Group__0)
		{ after(grammarAccess.getAttributeArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EVrsta
ruleEVrsta
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVrstaAccess().getAlternatives()); }
		(rule__EVrsta__Alternatives)
		{ after(grammarAccess.getEVrstaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassRuleAccess().getNotEqualsParserRuleCall_0()); }
		ruleNotEquals
		{ after(grammarAccess.getClassRuleAccess().getNotEqualsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassRuleAccess().getGreaterThanParserRuleCall_1()); }
		ruleGreaterThan
		{ after(grammarAccess.getClassRuleAccess().getGreaterThanParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassRuleAccess().getEqualsParserRuleCall_2()); }
		ruleEquals
		{ after(grammarAccess.getClassRuleAccess().getEqualsParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassRuleAccess().getLessThanParserRuleCall_3()); }
		ruleLessThan
		{ after(grammarAccess.getClassRuleAccess().getLessThanParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeRuleAccess().getRequiredParserRuleCall_0()); }
		ruleRequired
		{ after(grammarAccess.getAttributeRuleAccess().getRequiredParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getEmailParserRuleCall_1()); }
		ruleEmail
		{ after(grammarAccess.getAttributeRuleAccess().getEmailParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getMinLengthParserRuleCall_2()); }
		ruleMinLength
		{ after(grammarAccess.getAttributeRuleAccess().getMinLengthParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getMaxLengthParserRuleCall_3()); }
		ruleMaxLength
		{ after(grammarAccess.getAttributeRuleAccess().getMaxLengthParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getLengthParserRuleCall_4()); }
		ruleLength
		{ after(grammarAccess.getAttributeRuleAccess().getLengthParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getMinNumberParserRuleCall_5()); }
		ruleMinNumber
		{ after(grammarAccess.getAttributeRuleAccess().getMinNumberParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getMinDateParserRuleCall_6()); }
		ruleMinDate
		{ after(grammarAccess.getAttributeRuleAccess().getMinDateParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getMaxNumberParserRuleCall_7()); }
		ruleMaxNumber
		{ after(grammarAccess.getAttributeRuleAccess().getMaxNumberParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getMaxDateParserRuleCall_8()); }
		ruleMaxDate
		{ after(grammarAccess.getAttributeRuleAccess().getMaxDateParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getAcceptableValuesStringParserRuleCall_9()); }
		ruleAcceptableValuesString
		{ after(grammarAccess.getAttributeRuleAccess().getAcceptableValuesStringParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getAcceptableValuesDateParserRuleCall_10()); }
		ruleAcceptableValuesDate
		{ after(grammarAccess.getAttributeRuleAccess().getAcceptableValuesDateParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getStringPatternParserRuleCall_11()); }
		ruleStringPattern
		{ after(grammarAccess.getAttributeRuleAccess().getStringPatternParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeRuleAccess().getDatePatternParserRuleCall_12()); }
		ruleDatePattern
		{ after(grammarAccess.getAttributeRuleAccess().getDatePatternParserRuleCall_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getGroup_0()); }
		(rule__Float__Group_0__0)
		{ after(grammarAccess.getFloatAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVrsta__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVrstaAccess().getStringEnumLiteralDeclaration_0()); }
		('String')
		{ after(grammarAccess.getEVrstaAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEVrstaAccess().getNumberEnumLiteralDeclaration_1()); }
		('Number')
		{ after(grammarAccess.getEVrstaAccess().getNumberEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEVrstaAccess().getDateEnumLiteralDeclaration_2()); }
		('Date')
		{ after(grammarAccess.getEVrstaAccess().getDateEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group__0__Impl
	rule__ValidationClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getValidationClassAction_0()); }
	()
	{ after(grammarAccess.getValidationClassAccess().getValidationClassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group__1__Impl
	rule__ValidationClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getNameAssignment_1()); }
	(rule__ValidationClass__NameAssignment_1)
	{ after(grammarAccess.getValidationClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group__2__Impl
	rule__ValidationClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getValidationClassAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group__3__Impl
	rule__ValidationClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getGroup_3()); }
	(rule__ValidationClass__Group_3__0)?
	{ after(grammarAccess.getValidationClassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group__4__Impl
	rule__ValidationClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getGroup_4()); }
	(rule__ValidationClass__Group_4__0)?
	{ after(grammarAccess.getValidationClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getValidationClassAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationClass__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group_3__0__Impl
	rule__ValidationClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getClassattributeAssignment_3_0()); }
	(rule__ValidationClass__ClassattributeAssignment_3_0)
	{ after(grammarAccess.getValidationClassAccess().getClassattributeAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getClassattributeAssignment_3_1()); }
	(rule__ValidationClass__ClassattributeAssignment_3_1)*
	{ after(grammarAccess.getValidationClassAccess().getClassattributeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group_4__0__Impl
	rule__ValidationClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getClassruleAssignment_4_0()); }
	(rule__ValidationClass__ClassruleAssignment_4_0)
	{ after(grammarAccess.getValidationClassAccess().getClassruleAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationClass__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationClassAccess().getClassruleAssignment_4_1()); }
	(rule__ValidationClass__ClassruleAssignment_4_1)*
	{ after(grammarAccess.getValidationClassAccess().getClassruleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group__0__Impl
	rule__ClassAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getNameAssignment_0()); }
	(rule__ClassAttribute__NameAssignment_0)
	{ after(grammarAccess.getClassAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group__1__Impl
	rule__ClassAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getClassAttributeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group__2__Impl
	rule__ClassAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getTypeKeyword_2()); }
	'type'
	{ after(grammarAccess.getClassAttributeAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group__3__Impl
	rule__ClassAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getAttributetypeAssignment_3()); }
	(rule__ClassAttribute__AttributetypeAssignment_3)
	{ after(grammarAccess.getClassAttributeAccess().getAttributetypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group__4__Impl
	rule__ClassAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getGroup_4()); }
	(rule__ClassAttribute__Group_4__0)?
	{ after(grammarAccess.getClassAttributeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getClassAttributeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassAttribute__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group_4__0__Impl
	rule__ClassAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getAttributeruleAssignment_4_0()); }
	(rule__ClassAttribute__AttributeruleAssignment_4_0)
	{ after(grammarAccess.getClassAttributeAccess().getAttributeruleAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttribute__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributeAccess().getAttributeruleAssignment_4_1()); }
	(rule__ClassAttribute__AttributeruleAssignment_4_1)*
	{ after(grammarAccess.getClassAttributeAccess().getAttributeruleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__0__Impl
	rule__AttributeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_0()); }
	()
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getVrstaAssignment_1()); }
	(rule__AttributeType__VrstaAssignment_1)
	{ after(grammarAccess.getAttributeTypeAccess().getVrstaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Required__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Required__Group__0__Impl
	rule__Required__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Required__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredAccess().getRequiredAction_0()); }
	()
	{ after(grammarAccess.getRequiredAccess().getRequiredAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Required__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Required__Group__1__Impl
	rule__Required__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Required__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredAccess().getIsRequiredAssignment_1()); }
	(rule__Required__IsRequiredAssignment_1)?
	{ after(grammarAccess.getRequiredAccess().getIsRequiredAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Required__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Required__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Required__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredAccess().getRequiredKeyword_2()); }
	'Required'
	{ after(grammarAccess.getRequiredAccess().getRequiredKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Email__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Email__Group__0__Impl
	rule__Email__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Email__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmailAccess().getEmailAction_0()); }
	()
	{ after(grammarAccess.getEmailAccess().getEmailAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Email__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Email__Group__1__Impl
	rule__Email__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Email__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmailAccess().getIsEmailAssignment_1()); }
	(rule__Email__IsEmailAssignment_1)?
	{ after(grammarAccess.getEmailAccess().getIsEmailAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Email__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Email__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Email__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmailAccess().getEmailKeyword_2()); }
	'Email'
	{ after(grammarAccess.getEmailAccess().getEmailKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinLength__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinLength__Group__0__Impl
	rule__MinLength__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLength__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinLengthAccess().getMinLengthAction_0()); }
	()
	{ after(grammarAccess.getMinLengthAccess().getMinLengthAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLength__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinLength__Group__1__Impl
	rule__MinLength__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLength__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinLengthAccess().getMinLengthKeyword_1()); }
	'MinLength'
	{ after(grammarAccess.getMinLengthAccess().getMinLengthKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLength__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinLength__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLength__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinLengthAccess().getValueAssignment_2()); }
	(rule__MinLength__ValueAssignment_2)?
	{ after(grammarAccess.getMinLengthAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxLength__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxLength__Group__0__Impl
	rule__MaxLength__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLength__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxLengthAccess().getMaxLengthAction_0()); }
	()
	{ after(grammarAccess.getMaxLengthAccess().getMaxLengthAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLength__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxLength__Group__1__Impl
	rule__MaxLength__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLength__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxLengthAccess().getMaxLengthKeyword_1()); }
	'MaxLength'
	{ after(grammarAccess.getMaxLengthAccess().getMaxLengthKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLength__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxLength__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLength__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxLengthAccess().getValueAssignment_2()); }
	(rule__MaxLength__ValueAssignment_2)?
	{ after(grammarAccess.getMaxLengthAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Length__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__0__Impl
	rule__Length__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getLengthAction_0()); }
	()
	{ after(grammarAccess.getLengthAccess().getLengthAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__1__Impl
	rule__Length__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getLengthKeyword_1()); }
	'Length'
	{ after(grammarAccess.getLengthAccess().getLengthKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getValueAssignment_2()); }
	(rule__Length__ValueAssignment_2)?
	{ after(grammarAccess.getLengthAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinNumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinNumber__Group__0__Impl
	rule__MinNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinNumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinNumberAccess().getMinNumberAction_0()); }
	()
	{ after(grammarAccess.getMinNumberAccess().getMinNumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinNumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinNumber__Group__1__Impl
	rule__MinNumber__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinNumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinNumberAccess().getMinNumberKeyword_1()); }
	'MinNumber'
	{ after(grammarAccess.getMinNumberAccess().getMinNumberKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinNumber__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinNumber__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinNumber__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinNumberAccess().getValueAssignment_2()); }
	(rule__MinNumber__ValueAssignment_2)?
	{ after(grammarAccess.getMinNumberAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinDate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinDate__Group__0__Impl
	rule__MinDate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinDate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinDateAccess().getMinDateAction_0()); }
	()
	{ after(grammarAccess.getMinDateAccess().getMinDateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinDate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinDate__Group__1__Impl
	rule__MinDate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinDate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinDateAccess().getMinDateKeyword_1()); }
	'MinDate'
	{ after(grammarAccess.getMinDateAccess().getMinDateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinDate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinDate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinDate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinDateAccess().getValueAssignment_2()); }
	(rule__MinDate__ValueAssignment_2)?
	{ after(grammarAccess.getMinDateAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxNumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumber__Group__0__Impl
	rule__MaxNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberAccess().getMaxNumberAction_0()); }
	()
	{ after(grammarAccess.getMaxNumberAccess().getMaxNumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumber__Group__1__Impl
	rule__MaxNumber__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberAccess().getMaxNumberKeyword_1()); }
	'MaxNumber'
	{ after(grammarAccess.getMaxNumberAccess().getMaxNumberKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumber__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumber__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumber__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberAccess().getValueAssignment_2()); }
	(rule__MaxNumber__ValueAssignment_2)?
	{ after(grammarAccess.getMaxNumberAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxDate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDate__Group__0__Impl
	rule__MaxDate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDateAccess().getMaxDateAction_0()); }
	()
	{ after(grammarAccess.getMaxDateAccess().getMaxDateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDate__Group__1__Impl
	rule__MaxDate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDateAccess().getMaxDateKeyword_1()); }
	'MaxDate'
	{ after(grammarAccess.getMaxDateAccess().getMaxDateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDateAccess().getValueAssignment_2()); }
	(rule__MaxDate__ValueAssignment_2)?
	{ after(grammarAccess.getMaxDateAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptableValuesString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group__0__Impl
	rule__AcceptableValuesString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getAcceptableValuesStringAction_0()); }
	()
	{ after(grammarAccess.getAcceptableValuesStringAccess().getAcceptableValuesStringAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group__1__Impl
	rule__AcceptableValuesString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getAcceptableValuesStringKeyword_1()); }
	'AcceptableValuesString'
	{ after(grammarAccess.getAcceptableValuesStringAccess().getAcceptableValuesStringKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getGroup_2()); }
	(rule__AcceptableValuesString__Group_2__0)?
	{ after(grammarAccess.getAcceptableValuesStringAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptableValuesString__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group_2__0__Impl
	rule__AcceptableValuesString__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getAcceptableValuesStringAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group_2__1__Impl
	rule__AcceptableValuesString__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getValuesAssignment_2_1()); }
	(rule__AcceptableValuesString__ValuesAssignment_2_1)
	{ after(grammarAccess.getAcceptableValuesStringAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group_2__2__Impl
	rule__AcceptableValuesString__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getGroup_2_2()); }
	(rule__AcceptableValuesString__Group_2_2__0)*
	{ after(grammarAccess.getAcceptableValuesStringAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getAcceptableValuesStringAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptableValuesString__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group_2_2__0__Impl
	rule__AcceptableValuesString__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getAcceptableValuesStringAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesString__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesStringAccess().getValuesAssignment_2_2_1()); }
	(rule__AcceptableValuesString__ValuesAssignment_2_2_1)
	{ after(grammarAccess.getAcceptableValuesStringAccess().getValuesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptableValuesDate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group__0__Impl
	rule__AcceptableValuesDate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getAcceptableValuesDateAction_0()); }
	()
	{ after(grammarAccess.getAcceptableValuesDateAccess().getAcceptableValuesDateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group__1__Impl
	rule__AcceptableValuesDate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getAcceptableValuesDateKeyword_1()); }
	'AcceptableValuesDate'
	{ after(grammarAccess.getAcceptableValuesDateAccess().getAcceptableValuesDateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getGroup_2()); }
	(rule__AcceptableValuesDate__Group_2__0)?
	{ after(grammarAccess.getAcceptableValuesDateAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptableValuesDate__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group_2__0__Impl
	rule__AcceptableValuesDate__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getAcceptableValuesDateAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group_2__1__Impl
	rule__AcceptableValuesDate__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getValuesAssignment_2_1()); }
	(rule__AcceptableValuesDate__ValuesAssignment_2_1)
	{ after(grammarAccess.getAcceptableValuesDateAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group_2__2__Impl
	rule__AcceptableValuesDate__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getGroup_2_2()); }
	(rule__AcceptableValuesDate__Group_2_2__0)*
	{ after(grammarAccess.getAcceptableValuesDateAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getAcceptableValuesDateAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptableValuesDate__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group_2_2__0__Impl
	rule__AcceptableValuesDate__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getAcceptableValuesDateAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AcceptableValuesDate__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAcceptableValuesDateAccess().getValuesAssignment_2_2_1()); }
	(rule__AcceptableValuesDate__ValuesAssignment_2_2_1)
	{ after(grammarAccess.getAcceptableValuesDateAccess().getValuesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringPattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringPattern__Group__0__Impl
	rule__StringPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPatternAccess().getStringPatternAction_0()); }
	()
	{ after(grammarAccess.getStringPatternAccess().getStringPatternAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringPattern__Group__1__Impl
	rule__StringPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPatternAccess().getStringPatternKeyword_1()); }
	'StringPattern'
	{ after(grammarAccess.getStringPatternAccess().getStringPatternKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringPattern__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPatternAccess().getValueAssignment_2()); }
	(rule__StringPattern__ValueAssignment_2)?
	{ after(grammarAccess.getStringPatternAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DatePattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatePattern__Group__0__Impl
	rule__DatePattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatePattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatePatternAccess().getDatePatternAction_0()); }
	()
	{ after(grammarAccess.getDatePatternAccess().getDatePatternAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatePattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatePattern__Group__1__Impl
	rule__DatePattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DatePattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatePatternAccess().getDatePatternKeyword_1()); }
	'DatePattern'
	{ after(grammarAccess.getDatePatternAccess().getDatePatternKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatePattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatePattern__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatePattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatePatternAccess().getValueAssignment_2()); }
	(rule__DatePattern__ValueAssignment_2)?
	{ after(grammarAccess.getDatePatternAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_0__0__Impl
	rule__Float__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
	{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_0__1__Impl
	rule__Float__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFloatAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
	{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotEquals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEquals__Group__0__Impl
	rule__NotEquals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEqualsAccess().getNotEqualsAction_0()); }
	()
	{ after(grammarAccess.getNotEqualsAccess().getNotEqualsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEquals__Group__1__Impl
	rule__NotEquals__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEqualsAccess().getNotEqualsKeyword_1()); }
	'NotEquals'
	{ after(grammarAccess.getNotEqualsAccess().getNotEqualsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEquals__Group__2__Impl
	rule__NotEquals__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEqualsAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getNotEqualsAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEquals__Group__3__Impl
	rule__NotEquals__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEqualsAccess().getGroup_3()); }
	(rule__NotEquals__Group_3__0)?
	{ after(grammarAccess.getNotEqualsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEquals__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEqualsAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNotEqualsAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotEquals__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEquals__Group_3__0__Impl
	rule__NotEquals__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEqualsAccess().getAttributearrayKeyword_3_0()); }
	'attributearray'
	{ after(grammarAccess.getNotEqualsAccess().getAttributearrayKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEquals__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEqualsAccess().getAttributearrayAssignment_3_1()); }
	(rule__NotEquals__AttributearrayAssignment_3_1)
	{ after(grammarAccess.getNotEqualsAccess().getAttributearrayAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreaterThan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__0__Impl
	rule__GreaterThan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getGreaterThanAction_0()); }
	()
	{ after(grammarAccess.getGreaterThanAccess().getGreaterThanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__1__Impl
	rule__GreaterThan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getGreaterThanKeyword_1()); }
	'GreaterThan'
	{ after(grammarAccess.getGreaterThanAccess().getGreaterThanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__2__Impl
	rule__GreaterThan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGreaterThanAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__3__Impl
	rule__GreaterThan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getGroup_3()); }
	(rule__GreaterThan__Group_3__0)?
	{ after(grammarAccess.getGreaterThanAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__4__Impl
	rule__GreaterThan__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getGroup_4()); }
	(rule__GreaterThan__Group_4__0)?
	{ after(grammarAccess.getGreaterThanAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getGreaterThanAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreaterThan__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group_3__0__Impl
	rule__GreaterThan__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getClassattributeKeyword_3_0()); }
	'classattribute'
	{ after(grammarAccess.getGreaterThanAccess().getClassattributeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getClassattributeAssignment_3_1()); }
	(rule__GreaterThan__ClassattributeAssignment_3_1)
	{ after(grammarAccess.getGreaterThanAccess().getClassattributeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreaterThan__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group_4__0__Impl
	rule__GreaterThan__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getAttributearrayKeyword_4_0()); }
	'attributearray'
	{ after(grammarAccess.getGreaterThanAccess().getAttributearrayKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group_4__1__Impl
	rule__GreaterThan__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getAttributearrayAssignment_4_1()); }
	(rule__GreaterThan__AttributearrayAssignment_4_1)
	{ after(grammarAccess.getGreaterThanAccess().getAttributearrayAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getGroup_4_2()); }
	(rule__GreaterThan__Group_4_2__0)*
	{ after(grammarAccess.getGreaterThanAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreaterThan__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group_4_2__0__Impl
	rule__GreaterThan__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getGreaterThanAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getAttributearrayAssignment_4_2_1()); }
	(rule__GreaterThan__AttributearrayAssignment_4_2_1)
	{ after(grammarAccess.getGreaterThanAccess().getAttributearrayAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group__0__Impl
	rule__Equals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getEqualsAction_0()); }
	()
	{ after(grammarAccess.getEqualsAccess().getEqualsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group__1__Impl
	rule__Equals__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getEqualsKeyword_1()); }
	'Equals'
	{ after(grammarAccess.getEqualsAccess().getEqualsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group__2__Impl
	rule__Equals__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEqualsAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group__3__Impl
	rule__Equals__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getGroup_3()); }
	(rule__Equals__Group_3__0)?
	{ after(grammarAccess.getEqualsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEqualsAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equals__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group_3__0__Impl
	rule__Equals__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getAttributearrayKeyword_3_0()); }
	'attributearray'
	{ after(grammarAccess.getEqualsAccess().getAttributearrayKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getAttributearrayAssignment_3_1()); }
	(rule__Equals__AttributearrayAssignment_3_1)
	{ after(grammarAccess.getEqualsAccess().getAttributearrayAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessThan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group__0__Impl
	rule__LessThan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getLessThanAction_0()); }
	()
	{ after(grammarAccess.getLessThanAccess().getLessThanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group__1__Impl
	rule__LessThan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getLessThanKeyword_1()); }
	'LessThan'
	{ after(grammarAccess.getLessThanAccess().getLessThanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group__2__Impl
	rule__LessThan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLessThanAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group__3__Impl
	rule__LessThan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getGroup_3()); }
	(rule__LessThan__Group_3__0)?
	{ after(grammarAccess.getLessThanAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group__4__Impl
	rule__LessThan__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getGroup_4()); }
	(rule__LessThan__Group_4__0)?
	{ after(grammarAccess.getLessThanAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getLessThanAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessThan__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_3__0__Impl
	rule__LessThan__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getClassattributeKeyword_3_0()); }
	'classattribute'
	{ after(grammarAccess.getLessThanAccess().getClassattributeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getClassattributeAssignment_3_1()); }
	(rule__LessThan__ClassattributeAssignment_3_1)
	{ after(grammarAccess.getLessThanAccess().getClassattributeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessThan__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_4__0__Impl
	rule__LessThan__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getAttributearrayKeyword_4_0()); }
	'attributearray'
	{ after(grammarAccess.getLessThanAccess().getAttributearrayKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_4__1__Impl
	rule__LessThan__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getLessThanAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_4__2__Impl
	rule__LessThan__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getAttributearrayAssignment_4_2()); }
	(rule__LessThan__AttributearrayAssignment_4_2)
	{ after(grammarAccess.getLessThanAccess().getAttributearrayAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_4__3__Impl
	rule__LessThan__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getGroup_4_3()); }
	(rule__LessThan__Group_4_3__0)*
	{ after(grammarAccess.getLessThanAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getLessThanAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessThan__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_4_3__0__Impl
	rule__LessThan__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getLessThanAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessThan__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessThanAccess().getAttributearrayAssignment_4_3_1()); }
	(rule__LessThan__AttributearrayAssignment_4_3_1)
	{ after(grammarAccess.getLessThanAccess().getAttributearrayAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group__0__Impl
	rule__AttributeArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getAttributeArrayAction_0()); }
	()
	{ after(grammarAccess.getAttributeArrayAccess().getAttributeArrayAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getGroup_1()); }
	(rule__AttributeArray__Group_1__0)?
	{ after(grammarAccess.getAttributeArrayAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeArray__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group_1__0__Impl
	rule__AttributeArray__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getAttributeArrayAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group_1__1__Impl
	rule__AttributeArray__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getClassattributeAssignment_1_1()); }
	(rule__AttributeArray__ClassattributeAssignment_1_1)
	{ after(grammarAccess.getAttributeArrayAccess().getClassattributeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group_1__2__Impl
	rule__AttributeArray__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getGroup_1_2()); }
	(rule__AttributeArray__Group_1_2__0)*
	{ after(grammarAccess.getAttributeArrayAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getAttributeArrayAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeArray__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group_1_2__0__Impl
	rule__AttributeArray__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getAttributeArrayAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeArray__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeArrayAccess().getClassattributeAssignment_1_2_1()); }
	(rule__AttributeArray__ClassattributeAssignment_1_2_1)
	{ after(grammarAccess.getAttributeArrayAccess().getClassattributeAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationClass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationClassAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getValidationClassAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__ClassattributeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationClassAccess().getClassattributeClassAttributeParserRuleCall_3_0_0()); }
		ruleClassAttribute
		{ after(grammarAccess.getValidationClassAccess().getClassattributeClassAttributeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__ClassattributeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationClassAccess().getClassattributeClassAttributeParserRuleCall_3_1_0()); }
		ruleClassAttribute
		{ after(grammarAccess.getValidationClassAccess().getClassattributeClassAttributeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__ClassruleAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationClassAccess().getClassruleClassRuleParserRuleCall_4_0_0()); }
		ruleClassRule
		{ after(grammarAccess.getValidationClassAccess().getClassruleClassRuleParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationClass__ClassruleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationClassAccess().getClassruleClassRuleParserRuleCall_4_1_0()); }
		ruleClassRule
		{ after(grammarAccess.getValidationClassAccess().getClassruleClassRuleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAttributeAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getClassAttributeAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__AttributetypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAttributeAccess().getAttributetypeAttributeTypeParserRuleCall_3_0()); }
		ruleAttributeType
		{ after(grammarAccess.getClassAttributeAccess().getAttributetypeAttributeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__AttributeruleAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAttributeAccess().getAttributeruleAttributeRuleParserRuleCall_4_0_0()); }
		ruleAttributeRule
		{ after(grammarAccess.getClassAttributeAccess().getAttributeruleAttributeRuleParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__AttributeruleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAttributeAccess().getAttributeruleAttributeRuleParserRuleCall_4_1_0()); }
		ruleAttributeRule
		{ after(grammarAccess.getClassAttributeAccess().getAttributeruleAttributeRuleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__VrstaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getVrstaEVrstaEnumRuleCall_1_0()); }
		ruleEVrsta
		{ after(grammarAccess.getAttributeTypeAccess().getVrstaEVrstaEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Required__IsRequiredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiredAccess().getIsRequiredIsRequiredKeyword_1_0()); }
		(
			{ before(grammarAccess.getRequiredAccess().getIsRequiredIsRequiredKeyword_1_0()); }
			'isRequired'
			{ after(grammarAccess.getRequiredAccess().getIsRequiredIsRequiredKeyword_1_0()); }
		)
		{ after(grammarAccess.getRequiredAccess().getIsRequiredIsRequiredKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Email__IsEmailAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmailAccess().getIsEmailIsEmailKeyword_1_0()); }
		(
			{ before(grammarAccess.getEmailAccess().getIsEmailIsEmailKeyword_1_0()); }
			'isEmail'
			{ after(grammarAccess.getEmailAccess().getIsEmailIsEmailKeyword_1_0()); }
		)
		{ after(grammarAccess.getEmailAccess().getIsEmailIsEmailKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLength__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinLengthAccess().getValueInt0ParserRuleCall_2_0()); }
		ruleInt0
		{ after(grammarAccess.getMinLengthAccess().getValueInt0ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLength__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxLengthAccess().getValueInt0ParserRuleCall_2_0()); }
		ruleInt0
		{ after(grammarAccess.getMaxLengthAccess().getValueInt0ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLengthAccess().getValueInt0ParserRuleCall_2_0()); }
		ruleInt0
		{ after(grammarAccess.getLengthAccess().getValueInt0ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinNumber__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinNumberAccess().getValueFloatParserRuleCall_2_0()); }
		ruleFloat
		{ after(grammarAccess.getMinNumberAccess().getValueFloatParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinDate__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinDateAccess().getValueEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getMinDateAccess().getValueEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumber__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxNumberAccess().getValueFloatParserRuleCall_2_0()); }
		ruleFloat
		{ after(grammarAccess.getMaxNumberAccess().getValueFloatParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDate__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxDateAccess().getValueEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getMaxDateAccess().getValueEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAcceptableValuesStringAccess().getValuesEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getAcceptableValuesStringAccess().getValuesEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesString__ValuesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAcceptableValuesStringAccess().getValuesEStringParserRuleCall_2_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getAcceptableValuesStringAccess().getValuesEStringParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAcceptableValuesDateAccess().getValuesEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getAcceptableValuesDateAccess().getValuesEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptableValuesDate__ValuesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAcceptableValuesDateAccess().getValuesEStringParserRuleCall_2_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getAcceptableValuesDateAccess().getValuesEStringParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPattern__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPatternAccess().getValueEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getStringPatternAccess().getValueEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatePattern__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatePatternAccess().getValueEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getDatePatternAccess().getValueEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEquals__AttributearrayAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotEqualsAccess().getAttributearrayAttributeArrayParserRuleCall_3_1_0()); }
		ruleAttributeArray
		{ after(grammarAccess.getNotEqualsAccess().getAttributearrayAttributeArrayParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__ClassattributeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreaterThanAccess().getClassattributeClassAttributeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getGreaterThanAccess().getClassattributeClassAttributeEStringParserRuleCall_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getGreaterThanAccess().getClassattributeClassAttributeEStringParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getGreaterThanAccess().getClassattributeClassAttributeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__AttributearrayAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreaterThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_1_0()); }
		ruleAttributeArray
		{ after(grammarAccess.getGreaterThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__AttributearrayAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreaterThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_2_1_0()); }
		ruleAttributeArray
		{ after(grammarAccess.getGreaterThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__AttributearrayAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualsAccess().getAttributearrayAttributeArrayParserRuleCall_3_1_0()); }
		ruleAttributeArray
		{ after(grammarAccess.getEqualsAccess().getAttributearrayAttributeArrayParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__ClassattributeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessThanAccess().getClassattributeClassAttributeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getLessThanAccess().getClassattributeClassAttributeEStringParserRuleCall_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getLessThanAccess().getClassattributeClassAttributeEStringParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getLessThanAccess().getClassattributeClassAttributeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__AttributearrayAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_2_0()); }
		ruleAttributeArray
		{ after(grammarAccess.getLessThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessThan__AttributearrayAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_3_1_0()); }
		ruleAttributeArray
		{ after(grammarAccess.getLessThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__ClassattributeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeEStringParserRuleCall_1_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeEStringParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArray__ClassattributeAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeCrossReference_1_2_1_0()); }
		(
			{ before(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeEStringParserRuleCall_1_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeEStringParserRuleCall_1_2_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeCrossReference_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
