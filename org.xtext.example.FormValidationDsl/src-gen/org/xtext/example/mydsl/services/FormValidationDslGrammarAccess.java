/*
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class FormValidationDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ValidationClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.ValidationClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValidationClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cClassattributeAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cClassattributeClassAttributeParserRuleCall_3_0_0 = (RuleCall)cClassattributeAssignment_3_0.eContents().get(0);
		private final Assignment cClassattributeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cClassattributeClassAttributeParserRuleCall_3_1_0 = (RuleCall)cClassattributeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cClassruleAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cClassruleClassRuleParserRuleCall_4_0_0 = (RuleCall)cClassruleAssignment_4_0.eContents().get(0);
		private final Assignment cClassruleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cClassruleClassRuleParserRuleCall_4_1_0 = (RuleCall)cClassruleAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ValidationClass:
		//	{ValidationClass} name=EString
		//	'{' (classattribute+=ClassAttribute classattribute+=ClassAttribute* / *'}'* /)? (classrule+=ClassRule
		//	classrule+=ClassRule* / *'}'* /)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ValidationClass} name=EString '{' (classattribute+=ClassAttribute classattribute+=ClassAttribute* / *'}'* /)?
		//(classrule+=ClassRule classrule+=ClassRule* / *'}'* /)? '}'
		public Group getGroup() { return cGroup; }
		
		//{ValidationClass}
		public Action getValidationClassAction_0() { return cValidationClassAction_0; }
		
		////'ValidationClass'
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(classattribute+=ClassAttribute classattribute+=ClassAttribute* / *'}'* /)?
		public Group getGroup_3() { return cGroup_3; }
		
		/// *'classattribute'* / / *'{'* / classattribute+=ClassAttribute
		public Assignment getClassattributeAssignment_3_0() { return cClassattributeAssignment_3_0; }
		
		//ClassAttribute
		public RuleCall getClassattributeClassAttributeParserRuleCall_3_0_0() { return cClassattributeClassAttributeParserRuleCall_3_0_0; }
		
		//classattribute+=ClassAttribute*
		public Assignment getClassattributeAssignment_3_1() { return cClassattributeAssignment_3_1; }
		
		//ClassAttribute
		public RuleCall getClassattributeClassAttributeParserRuleCall_3_1_0() { return cClassattributeClassAttributeParserRuleCall_3_1_0; }
		
		//(classrule+=ClassRule classrule+=ClassRule* / *'}'* /)?
		public Group getGroup_4() { return cGroup_4; }
		
		/// *'classrule' '{'* / classrule+=ClassRule
		public Assignment getClassruleAssignment_4_0() { return cClassruleAssignment_4_0; }
		
		//ClassRule
		public RuleCall getClassruleClassRuleParserRuleCall_4_0_0() { return cClassruleClassRuleParserRuleCall_4_0_0; }
		
		//classrule+=ClassRule*
		public Assignment getClassruleAssignment_4_1() { return cClassruleAssignment_4_1; }
		
		//ClassRule
		public RuleCall getClassruleClassRuleParserRuleCall_4_1_0() { return cClassruleClassRuleParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ClassRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.ClassRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNotEqualsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGreaterThanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEqualsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLessThanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ClassRule:
		//	NotEquals | GreaterThan | Equals | LessThan;
		@Override public ParserRule getRule() { return rule; }
		
		//NotEquals | GreaterThan | Equals | LessThan
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NotEquals
		public RuleCall getNotEqualsParserRuleCall_0() { return cNotEqualsParserRuleCall_0; }
		
		//GreaterThan
		public RuleCall getGreaterThanParserRuleCall_1() { return cGreaterThanParserRuleCall_1; }
		
		//Equals
		public RuleCall getEqualsParserRuleCall_2() { return cEqualsParserRuleCall_2; }
		
		//LessThan
		public RuleCall getLessThanParserRuleCall_3() { return cLessThanParserRuleCall_3; }
	}
	public class AttributeRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.AttributeRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRequiredParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEmailParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMinLengthParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMaxLengthParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLengthParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMinNumberParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cMinDateParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cMaxNumberParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cMaxDateParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cAcceptableValuesStringParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cAcceptableValuesDateParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cStringPatternParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cDatePatternParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//AttributeRule:
		//	Required | Email | MinLength | MaxLength | Length | MinNumber | MinDate | MaxNumber | MaxDate |
		//	AcceptableValuesString | AcceptableValuesDate | StringPattern | DatePattern;
		@Override public ParserRule getRule() { return rule; }
		
		//Required | Email | MinLength | MaxLength | Length | MinNumber | MinDate | MaxNumber | MaxDate | AcceptableValuesString |
		//AcceptableValuesDate | StringPattern | DatePattern
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Required
		public RuleCall getRequiredParserRuleCall_0() { return cRequiredParserRuleCall_0; }
		
		//Email
		public RuleCall getEmailParserRuleCall_1() { return cEmailParserRuleCall_1; }
		
		//MinLength
		public RuleCall getMinLengthParserRuleCall_2() { return cMinLengthParserRuleCall_2; }
		
		//MaxLength
		public RuleCall getMaxLengthParserRuleCall_3() { return cMaxLengthParserRuleCall_3; }
		
		//Length
		public RuleCall getLengthParserRuleCall_4() { return cLengthParserRuleCall_4; }
		
		//MinNumber
		public RuleCall getMinNumberParserRuleCall_5() { return cMinNumberParserRuleCall_5; }
		
		//MinDate
		public RuleCall getMinDateParserRuleCall_6() { return cMinDateParserRuleCall_6; }
		
		//MaxNumber
		public RuleCall getMaxNumberParserRuleCall_7() { return cMaxNumberParserRuleCall_7; }
		
		//MaxDate
		public RuleCall getMaxDateParserRuleCall_8() { return cMaxDateParserRuleCall_8; }
		
		//AcceptableValuesString
		public RuleCall getAcceptableValuesStringParserRuleCall_9() { return cAcceptableValuesStringParserRuleCall_9; }
		
		//AcceptableValuesDate
		public RuleCall getAcceptableValuesDateParserRuleCall_10() { return cAcceptableValuesDateParserRuleCall_10; }
		
		//StringPattern
		public RuleCall getStringPatternParserRuleCall_11() { return cStringPatternParserRuleCall_11; }
		
		//DatePattern
		public RuleCall getDatePatternParserRuleCall_12() { return cDatePatternParserRuleCall_12; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ClassAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.ClassAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributetypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributetypeAttributeTypeParserRuleCall_3_0 = (RuleCall)cAttributetypeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cAttributeruleAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cAttributeruleAttributeRuleParserRuleCall_4_0_0 = (RuleCall)cAttributeruleAssignment_4_0.eContents().get(0);
		private final Assignment cAttributeruleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributeruleAttributeRuleParserRuleCall_4_1_0 = (RuleCall)cAttributeruleAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ClassAttribute:
		//	name=EString
		//	'{'
		//	'type' attributetype=AttributeType (attributerule+=AttributeRule attributerule+=AttributeRule* / *'}'* /)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		////'ClassAttribute'
		//name=EString '{' 'type' attributetype=AttributeType (attributerule+=AttributeRule attributerule+=AttributeRule*
		/// *'}'* /)? '}'
		public Group getGroup() { return cGroup; }
		
		////'ClassAttribute'
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//attributetype=AttributeType
		public Assignment getAttributetypeAssignment_3() { return cAttributetypeAssignment_3; }
		
		//AttributeType
		public RuleCall getAttributetypeAttributeTypeParserRuleCall_3_0() { return cAttributetypeAttributeTypeParserRuleCall_3_0; }
		
		//(attributerule+=AttributeRule attributerule+=AttributeRule* / *'}'* /)?
		public Group getGroup_4() { return cGroup_4; }
		
		/// *'rule'* / / *'{'* / attributerule+=AttributeRule
		public Assignment getAttributeruleAssignment_4_0() { return cAttributeruleAssignment_4_0; }
		
		//AttributeRule
		public RuleCall getAttributeruleAttributeRuleParserRuleCall_4_0_0() { return cAttributeruleAttributeRuleParserRuleCall_4_0_0; }
		
		//attributerule+=AttributeRule*
		public Assignment getAttributeruleAssignment_4_1() { return cAttributeruleAssignment_4_1; }
		
		//AttributeRule
		public RuleCall getAttributeruleAttributeRuleParserRuleCall_4_1_0() { return cAttributeruleAttributeRuleParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.AttributeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVrstaAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVrstaEVrstaEnumRuleCall_1_0 = (RuleCall)cVrstaAssignment_1.eContents().get(0);
		
		//AttributeType:
		//	{AttributeType} vrsta=EVrsta;
		@Override public ParserRule getRule() { return rule; }
		
		//{AttributeType} vrsta=EVrsta
		public Group getGroup() { return cGroup; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_0() { return cAttributeTypeAction_0; }
		
		////'AttributeType'
		////'{'
		//vrsta=EVrsta
		public Assignment getVrstaAssignment_1() { return cVrstaAssignment_1; }
		
		//EVrsta
		public RuleCall getVrstaEVrstaEnumRuleCall_1_0() { return cVrstaEVrstaEnumRuleCall_1_0; }
	}
	public class RequiredElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.Required");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRequiredAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsRequiredAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsRequiredIsRequiredKeyword_1_0 = (Keyword)cIsRequiredAssignment_1.eContents().get(0);
		private final Keyword cRequiredKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Required:
		//	{Required} isRequired?='isRequired'?
		//	'Required';
		@Override public ParserRule getRule() { return rule; }
		
		//{Required} isRequired?='isRequired'? 'Required'
		public Group getGroup() { return cGroup; }
		
		//{Required}
		public Action getRequiredAction_0() { return cRequiredAction_0; }
		
		//isRequired?='isRequired'?
		public Assignment getIsRequiredAssignment_1() { return cIsRequiredAssignment_1; }
		
		//'isRequired'
		public Keyword getIsRequiredIsRequiredKeyword_1_0() { return cIsRequiredIsRequiredKeyword_1_0; }
		
		//'Required'
		public Keyword getRequiredKeyword_2() { return cRequiredKeyword_2; }
	}
	public class EmailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.Email");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEmailAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsEmailAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsEmailIsEmailKeyword_1_0 = (Keyword)cIsEmailAssignment_1.eContents().get(0);
		private final Keyword cEmailKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Email:
		//	{Email} isEmail?='isEmail'?
		//	'Email';
		@Override public ParserRule getRule() { return rule; }
		
		//{Email} isEmail?='isEmail'? 'Email'
		public Group getGroup() { return cGroup; }
		
		//{Email}
		public Action getEmailAction_0() { return cEmailAction_0; }
		
		//isEmail?='isEmail'?
		public Assignment getIsEmailAssignment_1() { return cIsEmailAssignment_1; }
		
		//'isEmail'
		public Keyword getIsEmailIsEmailKeyword_1_0() { return cIsEmailIsEmailKeyword_1_0; }
		
		//'Email'
		public Keyword getEmailKeyword_2() { return cEmailKeyword_2; }
	}
	public class MinLengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.MinLength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMinLengthAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMinLengthKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueInt0ParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MinLength:
		//	{MinLength}
		//	'MinLength'
		//	/ *'{'* /
		//	value=Int0?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{MinLength} 'MinLength' / *'{'* / value=Int0?
		public Group getGroup() { return cGroup; }
		
		//{MinLength}
		public Action getMinLengthAction_0() { return cMinLengthAction_0; }
		
		//'MinLength'
		public Keyword getMinLengthKeyword_1() { return cMinLengthKeyword_1; }
		
		/// *'{'* / value=Int0?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Int0
		public RuleCall getValueInt0ParserRuleCall_2_0() { return cValueInt0ParserRuleCall_2_0; }
	}
	public class MaxLengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.MaxLength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMaxLengthAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaxLengthKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueInt0ParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MaxLength:
		//	{MaxLength}
		//	'MaxLength'
		//	/ *'{'* /
		//	value=Int0?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{MaxLength} 'MaxLength' / *'{'* / value=Int0?
		public Group getGroup() { return cGroup; }
		
		//{MaxLength}
		public Action getMaxLengthAction_0() { return cMaxLengthAction_0; }
		
		//'MaxLength'
		public Keyword getMaxLengthKeyword_1() { return cMaxLengthKeyword_1; }
		
		/// *'{'* / value=Int0?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Int0
		public RuleCall getValueInt0ParserRuleCall_2_0() { return cValueInt0ParserRuleCall_2_0; }
	}
	public class LengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.Length");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLengthAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLengthKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueInt0ParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Length:
		//	{Length}
		//	'Length'
		//	/ *'{'* /
		//	value=Int0?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{Length} 'Length' / *'{'* / value=Int0?
		public Group getGroup() { return cGroup; }
		
		//{Length}
		public Action getLengthAction_0() { return cLengthAction_0; }
		
		//'Length'
		public Keyword getLengthKeyword_1() { return cLengthKeyword_1; }
		
		/// *'{'* / value=Int0?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Int0
		public RuleCall getValueInt0ParserRuleCall_2_0() { return cValueInt0ParserRuleCall_2_0; }
	}
	public class MinNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.MinNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMinNumberAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMinNumberKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueFloatParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MinNumber:
		//	{MinNumber}
		//	'MinNumber'
		//	/ *'{'* /
		//	value=Float?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{MinNumber} 'MinNumber' / *'{'* / value=Float?
		public Group getGroup() { return cGroup; }
		
		//{MinNumber}
		public Action getMinNumberAction_0() { return cMinNumberAction_0; }
		
		//'MinNumber'
		public Keyword getMinNumberKeyword_1() { return cMinNumberKeyword_1; }
		
		/// *'{'* / value=Float?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Float
		public RuleCall getValueFloatParserRuleCall_2_0() { return cValueFloatParserRuleCall_2_0; }
	}
	public class MinDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.MinDate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMinDateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMinDateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MinDate:
		//	{MinDate}
		//	'MinDate'
		//	/ *'{'* /
		//	value=EString?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{MinDate} 'MinDate' / *'{'* / value=EString?
		public Group getGroup() { return cGroup; }
		
		//{MinDate}
		public Action getMinDateAction_0() { return cMinDateAction_0; }
		
		//'MinDate'
		public Keyword getMinDateKeyword_1() { return cMinDateKeyword_1; }
		
		/// *'{'* / value=EString?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	public class MaxNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.MaxNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMaxNumberAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaxNumberKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueFloatParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MaxNumber:
		//	{MaxNumber}
		//	'MaxNumber'
		//	/ *'{'* /
		//	value=Float?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{MaxNumber} 'MaxNumber' / *'{'* / value=Float?
		public Group getGroup() { return cGroup; }
		
		//{MaxNumber}
		public Action getMaxNumberAction_0() { return cMaxNumberAction_0; }
		
		//'MaxNumber'
		public Keyword getMaxNumberKeyword_1() { return cMaxNumberKeyword_1; }
		
		/// *'{'* / value=Float?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Float
		public RuleCall getValueFloatParserRuleCall_2_0() { return cValueFloatParserRuleCall_2_0; }
	}
	public class MaxDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.MaxDate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMaxDateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaxDateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MaxDate:
		//	{MaxDate}
		//	'MaxDate'
		//	/ *'{'* /
		//	value=EString?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{MaxDate} 'MaxDate' / *'{'* / value=EString?
		public Group getGroup() { return cGroup; }
		
		//{MaxDate}
		public Action getMaxDateAction_0() { return cMaxDateAction_0; }
		
		//'MaxDate'
		public Keyword getMaxDateKeyword_1() { return cMaxDateKeyword_1; }
		
		/// *'{'* / value=EString?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	public class AcceptableValuesStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.AcceptableValuesString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAcceptableValuesStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAcceptableValuesStringKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_2_2_1_0 = (RuleCall)cValuesAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//AcceptableValuesString:
		//	{AcceptableValuesString}
		//	'AcceptableValuesString' ( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{AcceptableValuesString} 'AcceptableValuesString' ( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{AcceptableValuesString}
		public Action getAcceptableValuesStringAction_0() { return cAcceptableValuesStringAction_0; }
		
		//'AcceptableValuesString'
		public Keyword getAcceptableValuesStringKeyword_1() { return cAcceptableValuesStringKeyword_1; }
		
		//( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		/// *'values'* / '{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_2_1_0() { return cValuesEStringParserRuleCall_2_1_0; }
		
		//("," values+=EString)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_2_2_1() { return cValuesAssignment_2_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_2_2_1_0() { return cValuesEStringParserRuleCall_2_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
	}
	public class AcceptableValuesDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.AcceptableValuesDate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAcceptableValuesDateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAcceptableValuesDateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_2_2_1_0 = (RuleCall)cValuesAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//AcceptableValuesDate:
		//	{AcceptableValuesDate}
		//	'AcceptableValuesDate' ( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{AcceptableValuesDate} 'AcceptableValuesDate' ( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{AcceptableValuesDate}
		public Action getAcceptableValuesDateAction_0() { return cAcceptableValuesDateAction_0; }
		
		//'AcceptableValuesDate'
		public Keyword getAcceptableValuesDateKeyword_1() { return cAcceptableValuesDateKeyword_1; }
		
		//( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		/// *'values'* / '{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_2_1_0() { return cValuesEStringParserRuleCall_2_1_0; }
		
		//("," values+=EString)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_2_2_1() { return cValuesAssignment_2_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_2_2_1_0() { return cValuesEStringParserRuleCall_2_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
	}
	public class StringPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.StringPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStringPatternAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStringPatternKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//StringPattern:
		//	{StringPattern}
		//	'StringPattern'
		//	/ *'{'* /
		//	value=EString?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{StringPattern} 'StringPattern' / *'{'* / value=EString?
		public Group getGroup() { return cGroup; }
		
		//{StringPattern}
		public Action getStringPatternAction_0() { return cStringPatternAction_0; }
		
		//'StringPattern'
		public Keyword getStringPatternKeyword_1() { return cStringPatternKeyword_1; }
		
		/// *'{'* / value=EString?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	public class DatePatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.DatePattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDatePatternAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDatePatternKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//DatePattern:
		//	{DatePattern}
		//	'DatePattern'
		//	/ *'{'* /
		//	value=EString?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{DatePattern} 'DatePattern' / *'{'* / value=EString?
		public Group getGroup() { return cGroup; }
		
		//{DatePattern}
		public Action getDatePatternAction_0() { return cDatePatternAction_0; }
		
		//'DatePattern'
		public Keyword getDatePatternKeyword_1() { return cDatePatternKeyword_1; }
		
		/// *'{'* / value=EString?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false'
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class Int0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.Int0");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Int0 type::Int:
		//	INT
		@Override public ParserRule getRule() { return rule; }
		
		/// *'Int'* / INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}
	public class FloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.Float");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Float type::Float:
		//	INT '.' INT | INT
		@Override public ParserRule getRule() { return rule; }
		
		/// *'Float'* / INT '.' INT | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		/// *'Float'* / INT '.' INT
		public Group getGroup_0() { return cGroup_0; }
		
		/// *'Float'* / INT
		public RuleCall getINTTerminalRuleCall_0_0() { return cINTTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0_2() { return cINTTerminalRuleCall_0_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		//EDate ecore::EDate:
		//	'EDate'
		@Override public ParserRule getRule() { return rule; }
		
		//'EDate'
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}
	public class NotEqualsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.NotEquals");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNotEqualsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNotEqualsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAttributearrayKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributearrayAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributearrayAttributeArrayParserRuleCall_3_1_0 = (RuleCall)cAttributearrayAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//NotEquals:
		//	{NotEquals}
		//	'NotEquals'
		//	'{' ('attributearray' attributearray=AttributeArray)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{NotEquals} 'NotEquals' '{' ('attributearray' attributearray=AttributeArray)? '}'
		public Group getGroup() { return cGroup; }
		
		//{NotEquals}
		public Action getNotEqualsAction_0() { return cNotEqualsAction_0; }
		
		//'NotEquals'
		public Keyword getNotEqualsKeyword_1() { return cNotEqualsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('attributearray' attributearray=AttributeArray)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'attributearray'
		public Keyword getAttributearrayKeyword_3_0() { return cAttributearrayKeyword_3_0; }
		
		//attributearray=AttributeArray
		public Assignment getAttributearrayAssignment_3_1() { return cAttributearrayAssignment_3_1; }
		
		//AttributeArray
		public RuleCall getAttributearrayAttributeArrayParserRuleCall_3_1_0() { return cAttributearrayAttributeArrayParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GreaterThanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.GreaterThan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGreaterThanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGreaterThanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cClassattributeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClassattributeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cClassattributeClassAttributeCrossReference_3_1_0 = (CrossReference)cClassattributeAssignment_3_1.eContents().get(0);
		private final RuleCall cClassattributeClassAttributeEStringParserRuleCall_3_1_0_1 = (RuleCall)cClassattributeClassAttributeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAttributearrayKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributearrayAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributearrayAttributeArrayParserRuleCall_4_1_0 = (RuleCall)cAttributearrayAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cAttributearrayAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cAttributearrayAttributeArrayParserRuleCall_4_2_1_0 = (RuleCall)cAttributearrayAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//GreaterThan:
		//	{GreaterThan}
		//	'GreaterThan'
		//	'{' ('classattribute' classattribute=[ClassAttribute|EString])? ('attributearray' / *'{' * /
		//	attributearray+=AttributeArray ("," attributearray+=AttributeArray)* / *'}'* /)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GreaterThan} 'GreaterThan' '{' ('classattribute' classattribute=[ClassAttribute|EString])? ('attributearray' / *'{' * /
		//attributearray+=AttributeArray ("," attributearray+=AttributeArray)* / *'}'* /)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GreaterThan}
		public Action getGreaterThanAction_0() { return cGreaterThanAction_0; }
		
		//'GreaterThan'
		public Keyword getGreaterThanKeyword_1() { return cGreaterThanKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('classattribute' classattribute=[ClassAttribute|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'classattribute'
		public Keyword getClassattributeKeyword_3_0() { return cClassattributeKeyword_3_0; }
		
		//classattribute=[ClassAttribute|EString]
		public Assignment getClassattributeAssignment_3_1() { return cClassattributeAssignment_3_1; }
		
		//[ClassAttribute|EString]
		public CrossReference getClassattributeClassAttributeCrossReference_3_1_0() { return cClassattributeClassAttributeCrossReference_3_1_0; }
		
		//EString
		public RuleCall getClassattributeClassAttributeEStringParserRuleCall_3_1_0_1() { return cClassattributeClassAttributeEStringParserRuleCall_3_1_0_1; }
		
		//('attributearray' / *'{' * / attributearray+=AttributeArray ("," attributearray+=AttributeArray)* / *'}'* /)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'attributearray'
		public Keyword getAttributearrayKeyword_4_0() { return cAttributearrayKeyword_4_0; }
		
		/// *'{' * / attributearray+=AttributeArray
		public Assignment getAttributearrayAssignment_4_1() { return cAttributearrayAssignment_4_1; }
		
		//AttributeArray
		public RuleCall getAttributearrayAttributeArrayParserRuleCall_4_1_0() { return cAttributearrayAttributeArrayParserRuleCall_4_1_0; }
		
		//("," attributearray+=AttributeArray)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//attributearray+=AttributeArray
		public Assignment getAttributearrayAssignment_4_2_1() { return cAttributearrayAssignment_4_2_1; }
		
		//AttributeArray
		public RuleCall getAttributearrayAttributeArrayParserRuleCall_4_2_1_0() { return cAttributearrayAttributeArrayParserRuleCall_4_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EqualsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.Equals");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEqualsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEqualsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAttributearrayKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributearrayAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributearrayAttributeArrayParserRuleCall_3_1_0 = (RuleCall)cAttributearrayAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Equals:
		//	{Equals}
		//	'Equals'
		//	'{' ('attributearray' attributearray=AttributeArray)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Equals} 'Equals' '{' ('attributearray' attributearray=AttributeArray)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Equals}
		public Action getEqualsAction_0() { return cEqualsAction_0; }
		
		//'Equals'
		public Keyword getEqualsKeyword_1() { return cEqualsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('attributearray' attributearray=AttributeArray)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'attributearray'
		public Keyword getAttributearrayKeyword_3_0() { return cAttributearrayKeyword_3_0; }
		
		//attributearray=AttributeArray
		public Assignment getAttributearrayAssignment_3_1() { return cAttributearrayAssignment_3_1; }
		
		//AttributeArray
		public RuleCall getAttributearrayAttributeArrayParserRuleCall_3_1_0() { return cAttributearrayAttributeArrayParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LessThanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.LessThan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLessThanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLessThanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cClassattributeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClassattributeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cClassattributeClassAttributeCrossReference_3_1_0 = (CrossReference)cClassattributeAssignment_3_1.eContents().get(0);
		private final RuleCall cClassattributeClassAttributeEStringParserRuleCall_3_1_0_1 = (RuleCall)cClassattributeClassAttributeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAttributearrayKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAttributearrayAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAttributearrayAttributeArrayParserRuleCall_4_2_0 = (RuleCall)cAttributearrayAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAttributearrayAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAttributearrayAttributeArrayParserRuleCall_4_3_1_0 = (RuleCall)cAttributearrayAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LessThan:
		//	{LessThan}
		//	'LessThan'
		//	'{' ('classattribute' classattribute=[ClassAttribute|EString])? ('attributearray' '{' attributearray+=AttributeArray
		//	("," attributearray+=AttributeArray)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{LessThan} 'LessThan' '{' ('classattribute' classattribute=[ClassAttribute|EString])? ('attributearray' '{'
		//attributearray+=AttributeArray ("," attributearray+=AttributeArray)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{LessThan}
		public Action getLessThanAction_0() { return cLessThanAction_0; }
		
		//'LessThan'
		public Keyword getLessThanKeyword_1() { return cLessThanKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('classattribute' classattribute=[ClassAttribute|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'classattribute'
		public Keyword getClassattributeKeyword_3_0() { return cClassattributeKeyword_3_0; }
		
		//classattribute=[ClassAttribute|EString]
		public Assignment getClassattributeAssignment_3_1() { return cClassattributeAssignment_3_1; }
		
		//[ClassAttribute|EString]
		public CrossReference getClassattributeClassAttributeCrossReference_3_1_0() { return cClassattributeClassAttributeCrossReference_3_1_0; }
		
		//EString
		public RuleCall getClassattributeClassAttributeEStringParserRuleCall_3_1_0_1() { return cClassattributeClassAttributeEStringParserRuleCall_3_1_0_1; }
		
		//('attributearray' '{' attributearray+=AttributeArray ("," attributearray+=AttributeArray)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'attributearray'
		public Keyword getAttributearrayKeyword_4_0() { return cAttributearrayKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//attributearray+=AttributeArray
		public Assignment getAttributearrayAssignment_4_2() { return cAttributearrayAssignment_4_2; }
		
		//AttributeArray
		public RuleCall getAttributearrayAttributeArrayParserRuleCall_4_2_0() { return cAttributearrayAttributeArrayParserRuleCall_4_2_0; }
		
		//("," attributearray+=AttributeArray)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//attributearray+=AttributeArray
		public Assignment getAttributearrayAssignment_4_3_1() { return cAttributearrayAssignment_4_3_1; }
		
		//AttributeArray
		public RuleCall getAttributearrayAttributeArrayParserRuleCall_4_3_1_0() { return cAttributearrayAttributeArrayParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AttributeArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.AttributeArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cClassattributeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cClassattributeClassAttributeCrossReference_1_1_0 = (CrossReference)cClassattributeAssignment_1_1.eContents().get(0);
		private final RuleCall cClassattributeClassAttributeEStringParserRuleCall_1_1_0_1 = (RuleCall)cClassattributeClassAttributeCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cClassattributeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cClassattributeClassAttributeCrossReference_1_2_1_0 = (CrossReference)cClassattributeAssignment_1_2_1.eContents().get(0);
		private final RuleCall cClassattributeClassAttributeEStringParserRuleCall_1_2_1_0_1 = (RuleCall)cClassattributeClassAttributeCrossReference_1_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//AttributeArray:
		//	{AttributeArray} ( / *'classattribute'* / '(' classattribute+=[ClassAttribute|EString] (","
		//	classattribute+=[ClassAttribute|EString])* ')')?
		//	/ *'}'* /;
		@Override public ParserRule getRule() { return rule; }
		
		//{AttributeArray} ( / *'classattribute'* / '(' classattribute+=[ClassAttribute|EString] (","
		//classattribute+=[ClassAttribute|EString])* ')')?
		public Group getGroup() { return cGroup; }
		
		//{AttributeArray}
		public Action getAttributeArrayAction_0() { return cAttributeArrayAction_0; }
		
		//( / *'classattribute'* / '(' classattribute+=[ClassAttribute|EString] ("," classattribute+=[ClassAttribute|EString])*
		//')')?
		public Group getGroup_1() { return cGroup_1; }
		
		/// *'classattribute'* / '('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//classattribute+=[ClassAttribute|EString]
		public Assignment getClassattributeAssignment_1_1() { return cClassattributeAssignment_1_1; }
		
		//[ClassAttribute|EString]
		public CrossReference getClassattributeClassAttributeCrossReference_1_1_0() { return cClassattributeClassAttributeCrossReference_1_1_0; }
		
		//EString
		public RuleCall getClassattributeClassAttributeEStringParserRuleCall_1_1_0_1() { return cClassattributeClassAttributeEStringParserRuleCall_1_1_0_1; }
		
		//("," classattribute+=[ClassAttribute|EString])*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//classattribute+=[ClassAttribute|EString]
		public Assignment getClassattributeAssignment_1_2_1() { return cClassattributeAssignment_1_2_1; }
		
		//[ClassAttribute|EString]
		public CrossReference getClassattributeClassAttributeCrossReference_1_2_1_0() { return cClassattributeClassAttributeCrossReference_1_2_1_0; }
		
		//EString
		public RuleCall getClassattributeClassAttributeEStringParserRuleCall_1_2_1_0_1() { return cClassattributeClassAttributeEStringParserRuleCall_1_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
	}
	
	public class EVrstaElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.FormValidationDsl.EVrsta");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNumberEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNumberNumberKeyword_1_0 = (Keyword)cNumberEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDateDateKeyword_2_0 = (Keyword)cDateEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum EVrsta:
		//	String | Number | Date;
		public EnumRule getRule() { return rule; }
		
		//String | Number | Date
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//String
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'String'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//Number
		public EnumLiteralDeclaration getNumberEnumLiteralDeclaration_1() { return cNumberEnumLiteralDeclaration_1; }
		
		//'Number'
		public Keyword getNumberNumberKeyword_1_0() { return cNumberNumberKeyword_1_0; }
		
		//Date
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_2() { return cDateEnumLiteralDeclaration_2; }
		
		//'Date'
		public Keyword getDateDateKeyword_2_0() { return cDateDateKeyword_2_0; }
	}
	
	private final ValidationClassElements pValidationClass;
	private final ClassRuleElements pClassRule;
	private final AttributeRuleElements pAttributeRule;
	private final EStringElements pEString;
	private final ClassAttributeElements pClassAttribute;
	private final AttributeTypeElements pAttributeType;
	private final EVrstaElements eEVrsta;
	private final RequiredElements pRequired;
	private final EmailElements pEmail;
	private final MinLengthElements pMinLength;
	private final MaxLengthElements pMaxLength;
	private final LengthElements pLength;
	private final MinNumberElements pMinNumber;
	private final MinDateElements pMinDate;
	private final MaxNumberElements pMaxNumber;
	private final MaxDateElements pMaxDate;
	private final AcceptableValuesStringElements pAcceptableValuesString;
	private final AcceptableValuesDateElements pAcceptableValuesDate;
	private final StringPatternElements pStringPattern;
	private final DatePatternElements pDatePattern;
	private final EBooleanElements pEBoolean;
	private final Int0Elements pInt0;
	private final FloatElements pFloat;
	private final EDateElements pEDate;
	private final NotEqualsElements pNotEquals;
	private final GreaterThanElements pGreaterThan;
	private final EqualsElements pEquals;
	private final LessThanElements pLessThan;
	private final AttributeArrayElements pAttributeArray;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public FormValidationDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pValidationClass = new ValidationClassElements();
		this.pClassRule = new ClassRuleElements();
		this.pAttributeRule = new AttributeRuleElements();
		this.pEString = new EStringElements();
		this.pClassAttribute = new ClassAttributeElements();
		this.pAttributeType = new AttributeTypeElements();
		this.eEVrsta = new EVrstaElements();
		this.pRequired = new RequiredElements();
		this.pEmail = new EmailElements();
		this.pMinLength = new MinLengthElements();
		this.pMaxLength = new MaxLengthElements();
		this.pLength = new LengthElements();
		this.pMinNumber = new MinNumberElements();
		this.pMinDate = new MinDateElements();
		this.pMaxNumber = new MaxNumberElements();
		this.pMaxDate = new MaxDateElements();
		this.pAcceptableValuesString = new AcceptableValuesStringElements();
		this.pAcceptableValuesDate = new AcceptableValuesDateElements();
		this.pStringPattern = new StringPatternElements();
		this.pDatePattern = new DatePatternElements();
		this.pEBoolean = new EBooleanElements();
		this.pInt0 = new Int0Elements();
		this.pFloat = new FloatElements();
		this.pEDate = new EDateElements();
		this.pNotEquals = new NotEqualsElements();
		this.pGreaterThan = new GreaterThanElements();
		this.pEquals = new EqualsElements();
		this.pLessThan = new LessThanElements();
		this.pAttributeArray = new AttributeArrayElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.FormValidationDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ValidationClass:
	//	{ValidationClass} name=EString
	//	'{' (classattribute+=ClassAttribute classattribute+=ClassAttribute* / *'}'* /)? (classrule+=ClassRule
	//	classrule+=ClassRule* / *'}'* /)?
	//	'}';
	public ValidationClassElements getValidationClassAccess() {
		return pValidationClass;
	}
	
	public ParserRule getValidationClassRule() {
		return getValidationClassAccess().getRule();
	}
	
	//ClassRule:
	//	NotEquals | GreaterThan | Equals | LessThan;
	public ClassRuleElements getClassRuleAccess() {
		return pClassRule;
	}
	
	public ParserRule getClassRuleRule() {
		return getClassRuleAccess().getRule();
	}
	
	//AttributeRule:
	//	Required | Email | MinLength | MaxLength | Length | MinNumber | MinDate | MaxNumber | MaxDate |
	//	AcceptableValuesString | AcceptableValuesDate | StringPattern | DatePattern;
	public AttributeRuleElements getAttributeRuleAccess() {
		return pAttributeRule;
	}
	
	public ParserRule getAttributeRuleRule() {
		return getAttributeRuleAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//ClassAttribute:
	//	name=EString
	//	'{'
	//	'type' attributetype=AttributeType (attributerule+=AttributeRule attributerule+=AttributeRule* / *'}'* /)?
	//	'}';
	public ClassAttributeElements getClassAttributeAccess() {
		return pClassAttribute;
	}
	
	public ParserRule getClassAttributeRule() {
		return getClassAttributeAccess().getRule();
	}
	
	//AttributeType:
	//	{AttributeType} vrsta=EVrsta;
	public AttributeTypeElements getAttributeTypeAccess() {
		return pAttributeType;
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//enum EVrsta:
	//	String | Number | Date;
	public EVrstaElements getEVrstaAccess() {
		return eEVrsta;
	}
	
	public EnumRule getEVrstaRule() {
		return getEVrstaAccess().getRule();
	}
	
	//Required:
	//	{Required} isRequired?='isRequired'?
	//	'Required';
	public RequiredElements getRequiredAccess() {
		return pRequired;
	}
	
	public ParserRule getRequiredRule() {
		return getRequiredAccess().getRule();
	}
	
	//Email:
	//	{Email} isEmail?='isEmail'?
	//	'Email';
	public EmailElements getEmailAccess() {
		return pEmail;
	}
	
	public ParserRule getEmailRule() {
		return getEmailAccess().getRule();
	}
	
	//MinLength:
	//	{MinLength}
	//	'MinLength'
	//	/ *'{'* /
	//	value=Int0?
	//	/ *'}'* /;
	public MinLengthElements getMinLengthAccess() {
		return pMinLength;
	}
	
	public ParserRule getMinLengthRule() {
		return getMinLengthAccess().getRule();
	}
	
	//MaxLength:
	//	{MaxLength}
	//	'MaxLength'
	//	/ *'{'* /
	//	value=Int0?
	//	/ *'}'* /;
	public MaxLengthElements getMaxLengthAccess() {
		return pMaxLength;
	}
	
	public ParserRule getMaxLengthRule() {
		return getMaxLengthAccess().getRule();
	}
	
	//Length:
	//	{Length}
	//	'Length'
	//	/ *'{'* /
	//	value=Int0?
	//	/ *'}'* /;
	public LengthElements getLengthAccess() {
		return pLength;
	}
	
	public ParserRule getLengthRule() {
		return getLengthAccess().getRule();
	}
	
	//MinNumber:
	//	{MinNumber}
	//	'MinNumber'
	//	/ *'{'* /
	//	value=Float?
	//	/ *'}'* /;
	public MinNumberElements getMinNumberAccess() {
		return pMinNumber;
	}
	
	public ParserRule getMinNumberRule() {
		return getMinNumberAccess().getRule();
	}
	
	//MinDate:
	//	{MinDate}
	//	'MinDate'
	//	/ *'{'* /
	//	value=EString?
	//	/ *'}'* /;
	public MinDateElements getMinDateAccess() {
		return pMinDate;
	}
	
	public ParserRule getMinDateRule() {
		return getMinDateAccess().getRule();
	}
	
	//MaxNumber:
	//	{MaxNumber}
	//	'MaxNumber'
	//	/ *'{'* /
	//	value=Float?
	//	/ *'}'* /;
	public MaxNumberElements getMaxNumberAccess() {
		return pMaxNumber;
	}
	
	public ParserRule getMaxNumberRule() {
		return getMaxNumberAccess().getRule();
	}
	
	//MaxDate:
	//	{MaxDate}
	//	'MaxDate'
	//	/ *'{'* /
	//	value=EString?
	//	/ *'}'* /;
	public MaxDateElements getMaxDateAccess() {
		return pMaxDate;
	}
	
	public ParserRule getMaxDateRule() {
		return getMaxDateAccess().getRule();
	}
	
	//AcceptableValuesString:
	//	{AcceptableValuesString}
	//	'AcceptableValuesString' ( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
	//	/ *'}'* /;
	public AcceptableValuesStringElements getAcceptableValuesStringAccess() {
		return pAcceptableValuesString;
	}
	
	public ParserRule getAcceptableValuesStringRule() {
		return getAcceptableValuesStringAccess().getRule();
	}
	
	//AcceptableValuesDate:
	//	{AcceptableValuesDate}
	//	'AcceptableValuesDate' ( / *'values'* / '{' values+=EString ("," values+=EString)* '}')?
	//	/ *'}'* /;
	public AcceptableValuesDateElements getAcceptableValuesDateAccess() {
		return pAcceptableValuesDate;
	}
	
	public ParserRule getAcceptableValuesDateRule() {
		return getAcceptableValuesDateAccess().getRule();
	}
	
	//StringPattern:
	//	{StringPattern}
	//	'StringPattern'
	//	/ *'{'* /
	//	value=EString?
	//	/ *'}'* /;
	public StringPatternElements getStringPatternAccess() {
		return pStringPattern;
	}
	
	public ParserRule getStringPatternRule() {
		return getStringPatternAccess().getRule();
	}
	
	//DatePattern:
	//	{DatePattern}
	//	'DatePattern'
	//	/ *'{'* /
	//	value=EString?
	//	/ *'}'* /;
	public DatePatternElements getDatePatternAccess() {
		return pDatePattern;
	}
	
	public ParserRule getDatePatternRule() {
		return getDatePatternAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false'
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Int0 type::Int:
	//	INT
	public Int0Elements getInt0Access() {
		return pInt0;
	}
	
	public ParserRule getInt0Rule() {
		return getInt0Access().getRule();
	}
	
	//Float type::Float:
	//	INT '.' INT | INT
	public FloatElements getFloatAccess() {
		return pFloat;
	}
	
	public ParserRule getFloatRule() {
		return getFloatAccess().getRule();
	}
	
	//EDate ecore::EDate:
	//	'EDate'
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//NotEquals:
	//	{NotEquals}
	//	'NotEquals'
	//	'{' ('attributearray' attributearray=AttributeArray)?
	//	'}';
	public NotEqualsElements getNotEqualsAccess() {
		return pNotEquals;
	}
	
	public ParserRule getNotEqualsRule() {
		return getNotEqualsAccess().getRule();
	}
	
	//GreaterThan:
	//	{GreaterThan}
	//	'GreaterThan'
	//	'{' ('classattribute' classattribute=[ClassAttribute|EString])? ('attributearray' / *'{' * /
	//	attributearray+=AttributeArray ("," attributearray+=AttributeArray)* / *'}'* /)?
	//	'}';
	public GreaterThanElements getGreaterThanAccess() {
		return pGreaterThan;
	}
	
	public ParserRule getGreaterThanRule() {
		return getGreaterThanAccess().getRule();
	}
	
	//Equals:
	//	{Equals}
	//	'Equals'
	//	'{' ('attributearray' attributearray=AttributeArray)?
	//	'}';
	public EqualsElements getEqualsAccess() {
		return pEquals;
	}
	
	public ParserRule getEqualsRule() {
		return getEqualsAccess().getRule();
	}
	
	//LessThan:
	//	{LessThan}
	//	'LessThan'
	//	'{' ('classattribute' classattribute=[ClassAttribute|EString])? ('attributearray' '{' attributearray+=AttributeArray
	//	("," attributearray+=AttributeArray)* '}')?
	//	'}';
	public LessThanElements getLessThanAccess() {
		return pLessThan;
	}
	
	public ParserRule getLessThanRule() {
		return getLessThanAccess().getRule();
	}
	
	//AttributeArray:
	//	{AttributeArray} ( / *'classattribute'* / '(' classattribute+=[ClassAttribute|EString] (","
	//	classattribute+=[ClassAttribute|EString])* ')')?
	//	/ *'}'* /;
	public AttributeArrayElements getAttributeArrayAccess() {
		return pAttributeArray;
	}
	
	public ParserRule getAttributeArrayRule() {
		return getAttributeArrayAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
