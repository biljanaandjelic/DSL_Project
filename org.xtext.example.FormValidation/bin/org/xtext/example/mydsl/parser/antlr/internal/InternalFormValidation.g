/*
 * generated by Xtext 2.9.1
 */
grammar InternalFormValidation;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.FormValidationGrammarAccess;

}

@parser::members {

 	private FormValidationGrammarAccess grammarAccess;

    public InternalFormValidationParser(TokenStream input, FormValidationGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ValidationClass";
   	}

   	@Override
   	protected FormValidationGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleValidationClass
entryRuleValidationClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValidationClassRule()); }
	iv_ruleValidationClass=ruleValidationClass
	{ $current=$iv_ruleValidationClass.current; }
	EOF;

// Rule ValidationClass
ruleValidationClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValidationClassAccess().getValidationClassAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getValidationClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValidationClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.FormValidation.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getValidationClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValidationClassAccess().getClassattributeClassAttributeParserRuleCall_3_0_0());
					}
					lv_classattribute_3_0=ruleClassAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValidationClassRule());
						}
						add(
							$current,
							"classattribute",
							lv_classattribute_3_0,
							"org.xtext.example.mydsl.FormValidation.ClassAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getValidationClassAccess().getClassattributeClassAttributeParserRuleCall_3_1_0());
					}
					lv_classattribute_4_0=ruleClassAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValidationClassRule());
						}
						add(
							$current,
							"classattribute",
							lv_classattribute_4_0,
							"org.xtext.example.mydsl.FormValidation.ClassAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValidationClassAccess().getClassruleClassRuleParserRuleCall_4_0_0());
					}
					lv_classrule_5_0=ruleClassRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValidationClassRule());
						}
						add(
							$current,
							"classrule",
							lv_classrule_5_0,
							"org.xtext.example.mydsl.FormValidation.ClassRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getValidationClassAccess().getClassruleClassRuleParserRuleCall_4_1_0());
					}
					lv_classrule_6_0=ruleClassRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValidationClassRule());
						}
						add(
							$current,
							"classrule",
							lv_classrule_6_0,
							"org.xtext.example.mydsl.FormValidation.ClassRule");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getValidationClassAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleClassRule
entryRuleClassRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassRuleRule()); }
	iv_ruleClassRule=ruleClassRule
	{ $current=$iv_ruleClassRule.current; }
	EOF;

// Rule ClassRule
ruleClassRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassRuleAccess().getNotEqualsParserRuleCall_0());
		}
		this_NotEquals_0=ruleNotEquals
		{
			$current = $this_NotEquals_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassRuleAccess().getGreaterThanParserRuleCall_1());
		}
		this_GreaterThan_1=ruleGreaterThan
		{
			$current = $this_GreaterThan_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassRuleAccess().getEqualsParserRuleCall_2());
		}
		this_Equals_2=ruleEquals
		{
			$current = $this_Equals_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassRuleAccess().getLessThanParserRuleCall_3());
		}
		this_LessThan_3=ruleLessThan
		{
			$current = $this_LessThan_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttributeRule
entryRuleAttributeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRuleRule()); }
	iv_ruleAttributeRule=ruleAttributeRule
	{ $current=$iv_ruleAttributeRule.current; }
	EOF;

// Rule AttributeRule
ruleAttributeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getRequiredParserRuleCall_0());
		}
		this_Required_0=ruleRequired
		{
			$current = $this_Required_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getEmailParserRuleCall_1());
		}
		this_Email_1=ruleEmail
		{
			$current = $this_Email_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getMinLengthParserRuleCall_2());
		}
		this_MinLength_2=ruleMinLength
		{
			$current = $this_MinLength_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getMaxLengthParserRuleCall_3());
		}
		this_MaxLength_3=ruleMaxLength
		{
			$current = $this_MaxLength_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getLengthParserRuleCall_4());
		}
		this_Length_4=ruleLength
		{
			$current = $this_Length_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getMinNumberParserRuleCall_5());
		}
		this_MinNumber_5=ruleMinNumber
		{
			$current = $this_MinNumber_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getMinDateParserRuleCall_6());
		}
		this_MinDate_6=ruleMinDate
		{
			$current = $this_MinDate_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getMaxNumberParserRuleCall_7());
		}
		this_MaxNumber_7=ruleMaxNumber
		{
			$current = $this_MaxNumber_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getMaxDateParserRuleCall_8());
		}
		this_MaxDate_8=ruleMaxDate
		{
			$current = $this_MaxDate_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getAcceptableValuesStringParserRuleCall_9());
		}
		this_AcceptableValuesString_9=ruleAcceptableValuesString
		{
			$current = $this_AcceptableValuesString_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getAcceptableValuesDateParserRuleCall_10());
		}
		this_AcceptableValuesDate_10=ruleAcceptableValuesDate
		{
			$current = $this_AcceptableValuesDate_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getStringPatternParserRuleCall_11());
		}
		this_StringPattern_11=ruleStringPattern
		{
			$current = $this_StringPattern_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeRuleAccess().getDatePatternParserRuleCall_12());
		}
		this_DatePattern_12=ruleDatePattern
		{
			$current = $this_DatePattern_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleClassAttribute
entryRuleClassAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassAttributeRule()); }
	iv_ruleClassAttribute=ruleClassAttribute
	{ $current=$iv_ruleClassAttribute.current; }
	EOF;

// Rule ClassAttribute
ruleClassAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassAttributeAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl.FormValidation.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassAttributeAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getClassAttributeAccess().getTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassAttributeAccess().getAttributetypeAttributeTypeParserRuleCall_3_0());
				}
				lv_attributetype_3_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassAttributeRule());
					}
					set(
						$current,
						"attributetype",
						lv_attributetype_3_0,
						"org.xtext.example.mydsl.FormValidation.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAttributeAccess().getAttributeruleAttributeRuleParserRuleCall_4_0_0());
					}
					lv_attributerule_4_0=ruleAttributeRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassAttributeRule());
						}
						add(
							$current,
							"attributerule",
							lv_attributerule_4_0,
							"org.xtext.example.mydsl.FormValidation.AttributeRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAttributeAccess().getAttributeruleAttributeRuleParserRuleCall_4_1_0());
					}
					lv_attributerule_5_0=ruleAttributeRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassAttributeRule());
						}
						add(
							$current,
							"attributerule",
							lv_attributerule_5_0,
							"org.xtext.example.mydsl.FormValidation.AttributeRule");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getClassAttributeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	iv_ruleAttributeType=ruleAttributeType
	{ $current=$iv_ruleAttributeType.current; }
	EOF;

// Rule AttributeType
ruleAttributeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeTypeAccess().getAttributeTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeTypeAccess().getVrstaEVrstaEnumRuleCall_1_0());
				}
				lv_vrsta_1_0=ruleEVrsta
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeTypeRule());
					}
					set(
						$current,
						"vrsta",
						lv_vrsta_1_0,
						"org.xtext.example.mydsl.FormValidation.EVrsta");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRequired
entryRuleRequired returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequiredRule()); }
	iv_ruleRequired=ruleRequired
	{ $current=$iv_ruleRequired.current; }
	EOF;

// Rule Required
ruleRequired returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRequiredAccess().getRequiredAction_0(),
					$current);
			}
		)
		(
			(
				lv_isRequired_1_0='isRequired'
				{
					newLeafNode(lv_isRequired_1_0, grammarAccess.getRequiredAccess().getIsRequiredIsRequiredKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequiredRule());
					}
					setWithLastConsumed($current, "isRequired", true, "isRequired");
				}
			)
		)?
		otherlv_2='Required'
		{
			newLeafNode(otherlv_2, grammarAccess.getRequiredAccess().getRequiredKeyword_2());
		}
	)
;

// Entry rule entryRuleEmail
entryRuleEmail returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmailRule()); }
	iv_ruleEmail=ruleEmail
	{ $current=$iv_ruleEmail.current; }
	EOF;

// Rule Email
ruleEmail returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEmailAccess().getEmailAction_0(),
					$current);
			}
		)
		(
			(
				lv_isEmail_1_0='isEmail'
				{
					newLeafNode(lv_isEmail_1_0, grammarAccess.getEmailAccess().getIsEmailIsEmailKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmailRule());
					}
					setWithLastConsumed($current, "isEmail", true, "isEmail");
				}
			)
		)?
		otherlv_2='Email'
		{
			newLeafNode(otherlv_2, grammarAccess.getEmailAccess().getEmailKeyword_2());
		}
	)
;

// Entry rule entryRuleMinLength
entryRuleMinLength returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinLengthRule()); }
	iv_ruleMinLength=ruleMinLength
	{ $current=$iv_ruleMinLength.current; }
	EOF;

// Rule MinLength
ruleMinLength returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMinLengthAccess().getMinLengthAction_0(),
					$current);
			}
		)
		otherlv_1='MinLength'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinLengthAccess().getMinLengthKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinLengthAccess().getValueInt0ParserRuleCall_2_0());
				}
				lv_value_2_0=ruleInt0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinLengthRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.Int0");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMaxLength
entryRuleMaxLength returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxLengthRule()); }
	iv_ruleMaxLength=ruleMaxLength
	{ $current=$iv_ruleMaxLength.current; }
	EOF;

// Rule MaxLength
ruleMaxLength returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMaxLengthAccess().getMaxLengthAction_0(),
					$current);
			}
		)
		otherlv_1='MaxLength'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaxLengthAccess().getMaxLengthKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxLengthAccess().getValueInt0ParserRuleCall_2_0());
				}
				lv_value_2_0=ruleInt0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxLengthRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.Int0");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLength
entryRuleLength returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLengthRule()); }
	iv_ruleLength=ruleLength
	{ $current=$iv_ruleLength.current; }
	EOF;

// Rule Length
ruleLength returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLengthAccess().getLengthAction_0(),
					$current);
			}
		)
		otherlv_1='Length'
		{
			newLeafNode(otherlv_1, grammarAccess.getLengthAccess().getLengthKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLengthAccess().getValueInt0ParserRuleCall_2_0());
				}
				lv_value_2_0=ruleInt0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLengthRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.Int0");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMinNumber
entryRuleMinNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinNumberRule()); }
	iv_ruleMinNumber=ruleMinNumber
	{ $current=$iv_ruleMinNumber.current; }
	EOF;

// Rule MinNumber
ruleMinNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMinNumberAccess().getMinNumberAction_0(),
					$current);
			}
		)
		otherlv_1='MinNumber'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinNumberAccess().getMinNumberKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinNumberAccess().getValueFloatParserRuleCall_2_0());
				}
				lv_value_2_0=ruleFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinNumberRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.Float");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMinDate
entryRuleMinDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinDateRule()); }
	iv_ruleMinDate=ruleMinDate
	{ $current=$iv_ruleMinDate.current; }
	EOF;

// Rule MinDate
ruleMinDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMinDateAccess().getMinDateAction_0(),
					$current);
			}
		)
		otherlv_1='MinDate'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinDateAccess().getMinDateKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinDateAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinDateRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMaxNumber
entryRuleMaxNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxNumberRule()); }
	iv_ruleMaxNumber=ruleMaxNumber
	{ $current=$iv_ruleMaxNumber.current; }
	EOF;

// Rule MaxNumber
ruleMaxNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMaxNumberAccess().getMaxNumberAction_0(),
					$current);
			}
		)
		otherlv_1='MaxNumber'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaxNumberAccess().getMaxNumberKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxNumberAccess().getValueFloatParserRuleCall_2_0());
				}
				lv_value_2_0=ruleFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxNumberRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.Float");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMaxDate
entryRuleMaxDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxDateRule()); }
	iv_ruleMaxDate=ruleMaxDate
	{ $current=$iv_ruleMaxDate.current; }
	EOF;

// Rule MaxDate
ruleMaxDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMaxDateAccess().getMaxDateAction_0(),
					$current);
			}
		)
		otherlv_1='MaxDate'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaxDateAccess().getMaxDateKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxDateAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxDateRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAcceptableValuesString
entryRuleAcceptableValuesString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAcceptableValuesStringRule()); }
	iv_ruleAcceptableValuesString=ruleAcceptableValuesString
	{ $current=$iv_ruleAcceptableValuesString.current; }
	EOF;

// Rule AcceptableValuesString
ruleAcceptableValuesString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAcceptableValuesStringAccess().getAcceptableValuesStringAction_0(),
					$current);
			}
		)
		otherlv_1='AcceptableValuesString'
		{
			newLeafNode(otherlv_1, grammarAccess.getAcceptableValuesStringAccess().getAcceptableValuesStringKeyword_1());
		}
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getAcceptableValuesStringAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAcceptableValuesStringAccess().getValuesEStringParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAcceptableValuesStringRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.example.mydsl.FormValidation.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getAcceptableValuesStringAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAcceptableValuesStringAccess().getValuesEStringParserRuleCall_2_2_1_0());
						}
						lv_values_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAcceptableValuesStringRule());
							}
							add(
								$current,
								"values",
								lv_values_5_0,
								"org.xtext.example.mydsl.FormValidation.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getAcceptableValuesStringAccess().getRightCurlyBracketKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleAcceptableValuesDate
entryRuleAcceptableValuesDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAcceptableValuesDateRule()); }
	iv_ruleAcceptableValuesDate=ruleAcceptableValuesDate
	{ $current=$iv_ruleAcceptableValuesDate.current; }
	EOF;

// Rule AcceptableValuesDate
ruleAcceptableValuesDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAcceptableValuesDateAccess().getAcceptableValuesDateAction_0(),
					$current);
			}
		)
		otherlv_1='AcceptableValuesDate'
		{
			newLeafNode(otherlv_1, grammarAccess.getAcceptableValuesDateAccess().getAcceptableValuesDateKeyword_1());
		}
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getAcceptableValuesDateAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAcceptableValuesDateAccess().getValuesEStringParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAcceptableValuesDateRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.example.mydsl.FormValidation.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getAcceptableValuesDateAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAcceptableValuesDateAccess().getValuesEStringParserRuleCall_2_2_1_0());
						}
						lv_values_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAcceptableValuesDateRule());
							}
							add(
								$current,
								"values",
								lv_values_5_0,
								"org.xtext.example.mydsl.FormValidation.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getAcceptableValuesDateAccess().getRightCurlyBracketKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleStringPattern
entryRuleStringPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringPatternRule()); }
	iv_ruleStringPattern=ruleStringPattern
	{ $current=$iv_ruleStringPattern.current; }
	EOF;

// Rule StringPattern
ruleStringPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringPatternAccess().getStringPatternAction_0(),
					$current);
			}
		)
		otherlv_1='StringPattern'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringPatternAccess().getStringPatternKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPatternAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPatternRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDatePattern
entryRuleDatePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatePatternRule()); }
	iv_ruleDatePattern=ruleDatePattern
	{ $current=$iv_ruleDatePattern.current; }
	EOF;

// Rule DatePattern
ruleDatePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDatePatternAccess().getDatePatternAction_0(),
					$current);
			}
		)
		otherlv_1='DatePattern'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatePatternAccess().getDatePatternKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatePatternAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatePatternRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FormValidation.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleInt0
entryRuleInt0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInt0Rule()); }
	iv_ruleInt0=ruleInt0
	{ $current=$iv_ruleInt0.current.getText(); }
	EOF;

// Rule Int0
ruleInt0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getInt0Access().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleFloat
entryRuleFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatRule()); }
	iv_ruleFloat=ruleFloat
	{ $current=$iv_ruleFloat.current.getText(); }
	EOF;

// Rule Float
ruleFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_INT_0=RULE_INT
			{
				$current.merge(this_INT_0);
			}
			{
				newLeafNode(this_INT_0, grammarAccess.getFloatAccess().getINTTerminalRuleCall_0_0());
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloatAccess().getFullStopKeyword_0_1());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getFloatAccess().getINTTerminalRuleCall_0_2());
			}
		)
		    |
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getFloatAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleNotEquals
entryRuleNotEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotEqualsRule()); }
	iv_ruleNotEquals=ruleNotEquals
	{ $current=$iv_ruleNotEquals.current; }
	EOF;

// Rule NotEquals
ruleNotEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNotEqualsAccess().getNotEqualsAction_0(),
					$current);
			}
		)
		otherlv_1='NotEquals'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotEqualsAccess().getNotEqualsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNotEqualsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='attributearray'
			{
				newLeafNode(otherlv_3, grammarAccess.getNotEqualsAccess().getAttributearrayKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNotEqualsAccess().getAttributearrayAttributeArrayParserRuleCall_3_1_0());
					}
					lv_attributearray_4_0=ruleAttributeArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotEqualsRule());
						}
						set(
							$current,
							"attributearray",
							lv_attributearray_4_0,
							"org.xtext.example.mydsl.FormValidation.AttributeArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getNotEqualsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleGreaterThan
entryRuleGreaterThan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreaterThanRule()); }
	iv_ruleGreaterThan=ruleGreaterThan
	{ $current=$iv_ruleGreaterThan.current; }
	EOF;

// Rule GreaterThan
ruleGreaterThan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGreaterThanAccess().getGreaterThanAction_0(),
					$current);
			}
		)
		otherlv_1='GreaterThan'
		{
			newLeafNode(otherlv_1, grammarAccess.getGreaterThanAccess().getGreaterThanKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGreaterThanAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='classattribute'
			{
				newLeafNode(otherlv_3, grammarAccess.getGreaterThanAccess().getClassattributeKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGreaterThanRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGreaterThanAccess().getClassattributeClassAttributeCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='attributearray'
			{
				newLeafNode(otherlv_5, grammarAccess.getGreaterThanAccess().getAttributearrayKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGreaterThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_1_0());
					}
					lv_attributearray_6_0=ruleAttributeArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGreaterThanRule());
						}
						add(
							$current,
							"attributearray",
							lv_attributearray_6_0,
							"org.xtext.example.mydsl.FormValidation.AttributeArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getGreaterThanAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGreaterThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_2_1_0());
						}
						lv_attributearray_8_0=ruleAttributeArray
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGreaterThanRule());
							}
							add(
								$current,
								"attributearray",
								lv_attributearray_8_0,
								"org.xtext.example.mydsl.FormValidation.AttributeArray");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getGreaterThanAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEquals
entryRuleEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualsRule()); }
	iv_ruleEquals=ruleEquals
	{ $current=$iv_ruleEquals.current; }
	EOF;

// Rule Equals
ruleEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEqualsAccess().getEqualsAction_0(),
					$current);
			}
		)
		otherlv_1='Equals'
		{
			newLeafNode(otherlv_1, grammarAccess.getEqualsAccess().getEqualsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEqualsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='attributearray'
			{
				newLeafNode(otherlv_3, grammarAccess.getEqualsAccess().getAttributearrayKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualsAccess().getAttributearrayAttributeArrayParserRuleCall_3_1_0());
					}
					lv_attributearray_4_0=ruleAttributeArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualsRule());
						}
						set(
							$current,
							"attributearray",
							lv_attributearray_4_0,
							"org.xtext.example.mydsl.FormValidation.AttributeArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getEqualsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLessThan
entryRuleLessThan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLessThanRule()); }
	iv_ruleLessThan=ruleLessThan
	{ $current=$iv_ruleLessThan.current; }
	EOF;

// Rule LessThan
ruleLessThan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLessThanAccess().getLessThanAction_0(),
					$current);
			}
		)
		otherlv_1='LessThan'
		{
			newLeafNode(otherlv_1, grammarAccess.getLessThanAccess().getLessThanKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLessThanAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='classattribute'
			{
				newLeafNode(otherlv_3, grammarAccess.getLessThanAccess().getClassattributeKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLessThanRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLessThanAccess().getClassattributeClassAttributeCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='attributearray'
			{
				newLeafNode(otherlv_5, grammarAccess.getLessThanAccess().getAttributearrayKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getLessThanAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLessThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_2_0());
					}
					lv_attributearray_7_0=ruleAttributeArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLessThanRule());
						}
						add(
							$current,
							"attributearray",
							lv_attributearray_7_0,
							"org.xtext.example.mydsl.FormValidation.AttributeArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getLessThanAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLessThanAccess().getAttributearrayAttributeArrayParserRuleCall_4_3_1_0());
						}
						lv_attributearray_9_0=ruleAttributeArray
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLessThanRule());
							}
							add(
								$current,
								"attributearray",
								lv_attributearray_9_0,
								"org.xtext.example.mydsl.FormValidation.AttributeArray");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getLessThanAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getLessThanAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAttributeArray
entryRuleAttributeArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeArrayRule()); }
	iv_ruleAttributeArray=ruleAttributeArray
	{ $current=$iv_ruleAttributeArray.current; }
	EOF;

// Rule AttributeArray
ruleAttributeArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeArrayAccess().getAttributeArrayAction_0(),
					$current);
			}
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeArrayAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeArrayRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeCrossReference_1_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getAttributeArrayAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeArrayRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getAttributeArrayAccess().getClassattributeClassAttributeCrossReference_1_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeArrayAccess().getRightParenthesisKeyword_1_3());
			}
		)?
	)
;

// Rule EVrsta
ruleEVrsta returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getEVrstaAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEVrstaAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Number'
			{
				$current = grammarAccess.getEVrstaAccess().getNumberEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEVrstaAccess().getNumberEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Date'
			{
				$current = grammarAccess.getEVrstaAccess().getDateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEVrstaAccess().getDateEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
